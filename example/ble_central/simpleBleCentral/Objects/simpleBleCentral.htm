<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\simpleBleCentral.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\simpleBleCentral.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5050106: Last Updated: Tue May 19 17:32:29 2020
<BR><P>
<H3>Maximum Stack Usage =        512 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
SimpleBLECentral_ProcessEvent &rArr; centralTestVectorProcess &rArr; phy_printf &rArr; print &rArr; printi &rArr; prints
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1]">NMI_Handler</a><BR>
 <LI><a href="#[2]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2]">HardFault_Handler</a><BR>
 <LI><a href="#[3]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">SVC_Handler</a><BR>
 <LI><a href="#[4]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">PendSV_Handler</a><BR>
 <LI><a href="#[5]">SysTick_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">SysTick_Handler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[2b]">AP_TIMER_IRQHandler</a> from ap_timer.o(i.AP_TIMER_IRQHandler) referenced from jump_table.o(jump_table_mem_area)
 <LI><a href="#[1f]">GAPBondMgr_ProcessEvent</a> from gapbondmgr.o(i.GAPBondMgr_ProcessEvent) referenced from osal_simpleblecentral.o(.constdata)
 <LI><a href="#[1e]">GAPCentralRole_ProcessEvent</a> from central.o(i.GAPCentralRole_ProcessEvent) referenced from osal_simpleblecentral.o(.constdata)
 <LI><a href="#[1b]">GAP_ProcessEvent</a> from rom1Sym.txt(ABSOLUTE) referenced from osal_simpleblecentral.o(.constdata)
 <LI><a href="#[20]">GATTServApp_ProcessEvent</a> from gattservapp.o(i.GATTServApp_ProcessEvent) referenced from osal_simpleblecentral.o(.constdata)
 <LI><a href="#[1c]">GATT_ProcessEvent</a> from rom1Sym.txt(ABSOLUTE) referenced from osal_simpleblecentral.o(.constdata)
 <LI><a href="#[19]">HCI_ProcessEvent</a> from rom1Sym.txt(ABSOLUTE) referenced from osal_simpleblecentral.o(.constdata)
 <LI><a href="#[2]">HardFault_Handler</a> from startup_armcm0.o(.text) referenced from startup_armcm0.o(RESET)
 <LI><a href="#[1a]">L2CAP_ProcessEvent</a> from rom1Sym.txt(ABSOLUTE) referenced from osal_simpleblecentral.o(.constdata)
 <LI><a href="#[18]">LL_ProcessEvent</a> from rom1Sym.txt(ABSOLUTE) referenced from osal_simpleblecentral.o(.constdata)
 <LI><a href="#[13]">LL_SetScanControl1</a> from patch.o(i.LL_SetScanControl1) referenced from patch.o(i.init_config)
 <LI><a href="#[1]">NMI_Handler</a> from startup_armcm0.o(.text) referenced from startup_armcm0.o(RESET)
 <LI><a href="#[4]">PendSV_Handler</a> from startup_armcm0.o(.text) referenced from startup_armcm0.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_armcm0.o(.text) referenced from startup_armcm0.o(RESET)
 <LI><a href="#[1d]">SM_ProcessEvent</a> from rom1Sym.txt(ABSOLUTE) referenced from osal_simpleblecentral.o(.constdata)
 <LI><a href="#[3]">SVC_Handler</a> from startup_armcm0.o(.text) referenced from startup_armcm0.o(RESET)
 <LI><a href="#[21]">SimpleBLECentral_ProcessEvent</a> from simpleblecentral.o(i.SimpleBLECentral_ProcessEvent) referenced from osal_simpleblecentral.o(.constdata)
 <LI><a href="#[5]">SysTick_Handler</a> from startup_armcm0.o(.text) referenced from startup_armcm0.o(RESET)
 <LI><a href="#[7]">SystemInit</a> from system_armcm0.o(i.SystemInit) referenced from startup_armcm0.o(.text)
 <LI><a href="#[8]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_armcm0.o(.text)
 <LI><a href="#[b]">fputc</a> from fputc.o(i.fputc) referenced from printf8.o(i.__0printf$8)
 <LI><a href="#[9]">gapBondMgrSendServiceChange</a> from gapbondmgr.o(i.gapBondMgrSendServiceChange) referenced from gapbondmgr.o(i.GAPBondMgr_ServiceChangeInd)
 <LI><a href="#[c]">gapCentralRole_timerCB</a> from central.o(i.gapCentralRole_timerCB) referenced from central.o(i.gapCentralRole_ProcessOSALMsg)
 <LI><a href="#[a]">gattServApp_HandleConnStatusCB</a> from gattservapp.o(i.gattServApp_HandleConnStatusCB) referenced from gattservapp.o(i.GATTServApp_Init)
 <LI><a href="#[17]">gattServApp_WriteAttrCB</a> from gattservapp.o(i.gattServApp_WriteAttrCB) referenced from gattservapp.o(.constdata)
 <LI><a href="#[15]">ggs_ReadAttrCB</a> from gapgattserver.o(i.ggs_ReadAttrCB) referenced from gapgattserver.o(.constdata)
 <LI><a href="#[16]">ggs_WriteAttrCB</a> from gapgattserver.o(i.ggs_WriteAttrCB) referenced from gapgattserver.o(.constdata)
 <LI><a href="#[e]">gpio_sleep_handler</a> from gpio.o(i.gpio_sleep_handler) referenced from gpio.o(i.hal_gpio_init)
 <LI><a href="#[d]">gpio_wakeup_handler</a> from gpio.o(i.gpio_wakeup_handler) referenced from gpio.o(i.hal_gpio_init)
 <LI><a href="#[2f]">hal_GPIO_IRQHandler</a> from gpio.o(i.hal_GPIO_IRQHandler) referenced from jump_table.o(jump_table_mem_area)
 <LI><a href="#[2d]">hal_SPI0_IRQHandler</a> from spi.o(i.hal_SPI0_IRQHandler) referenced from jump_table.o(jump_table_mem_area)
 <LI><a href="#[2e]">hal_SPI1_IRQHandler</a> from spi.o(i.hal_SPI1_IRQHandler) referenced from jump_table.o(jump_table_mem_area)
 <LI><a href="#[2c]">hal_UART0_IRQHandler</a> from uart.o(i.hal_UART0_IRQHandler) referenced from jump_table.o(jump_table_mem_area)
 <LI><a href="#[27]">hal_pwrmgr_sleep_process</a> from pwrmgr.o(i.hal_pwrmgr_sleep_process) referenced from jump_table.o(jump_table_mem_area)
 <LI><a href="#[28]">hal_pwrmgr_wakeup_process</a> from pwrmgr.o(i.hal_pwrmgr_wakeup_process) referenced from jump_table.o(jump_table_mem_area)
 <LI><a href="#[2a]">hard_fault</a> from jump_table.o(i.hard_fault) referenced from jump_table.o(jump_table_mem_area)
 <LI><a href="#[14]">llSetupAdv1</a> from patch.o(i.llSetupAdv1) referenced from patch.o(i.init_config)
 <LI><a href="#[11]">ll_hw_go1</a> from patch.o(i.ll_hw_go1) referenced from patch.o(i.init_config)
 <LI><a href="#[6]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
 <LI><a href="#[26]">osalInitTasks</a> from osal_simpleblecentral.o(i.osalInitTasks) referenced from jump_table.o(jump_table_mem_area)
 <LI><a href="#[12]">rf_calibrate1</a> from patch.o(i.rf_calibrate1) referenced from patch.o(i.init_config)
 <LI><a href="#[29]">rf_phy_ini</a> from rf_phy_driver.o(i.rf_phy_ini) referenced from jump_table.o(jump_table_mem_area)
 <LI><a href="#[f]">rf_wakeup_handler</a> from main.o(i.rf_wakeup_handler) referenced from main.o(i.hal_rfphy_init)
 <LI><a href="#[23]">simpleBLECentralEventCB</a> from simpleblecentral.o(i.simpleBLECentralEventCB) referenced from simpleblecentral.o(.constdata)
 <LI><a href="#[25]">simpleBLECentralPairStateCB</a> from simpleblecentral.o(i.simpleBLECentralPairStateCB) referenced from simpleblecentral.o(.constdata)
 <LI><a href="#[24]">simpleBLECentralPasscodeCB</a> from simpleblecentral.o(i.simpleBLECentralPasscodeCB) referenced from simpleblecentral.o(.constdata)
 <LI><a href="#[22]">simpleBLECentralRssiCB</a> from simpleblecentral.o(i.simpleBLECentralRssiCB) referenced from simpleblecentral.o(.constdata)
 <LI><a href="#[10]">uart_hw_config</a> from uart.o(i.uart_hw_config) referenced from uart.o(i.hal_uart_init)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[b3]"></a>__aeabi_uidivmod</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_system_init (via Veneer)
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_pull_set (via Veneer)
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitMs (via Veneer)
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SimpleBLECentral_ProcessEvent (via Veneer)
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessReadByTypeReq (via Veneer)
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessReadByGrpTypeReq (via Veneer)
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printi (via Veneer)
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_hw_config (via Veneer)
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_wakeup_set (via Veneer)
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_ms_intv (via Veneer)
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rc32k_tracking_check (via Veneer)
</UL>

<P><STRONG><a name="[159]"></a>__aeabi_idivmod</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_dtm_trigged (via Veneer)
</UL>

<P><STRONG><a name="[135]"></a>strlen</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;phy_printf (via Veneer)
</UL>

<P><STRONG><a name="[93]"></a>ATT_CompareUUID</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_ReadAttr (via Veneer)
</UL>

<P><STRONG><a name="[ee]"></a>ATT_ErrorRsp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessMsg (via Veneer)
</UL>

<P><STRONG><a name="[e6]"></a>ATT_ExchangeMTURsp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessMsg (via Veneer)
</UL>

<P><STRONG><a name="[e3]"></a>ATT_ExecuteWriteRsp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessExecuteWriteReq (via Veneer)
</UL>

<P><STRONG><a name="[e5]"></a>ATT_FindByTypeValueRsp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessFindByTypeValueReq (via Veneer)
</UL>

<P><STRONG><a name="[ba]"></a>ATT_GetCurrentMTUSize</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simpleBLECentralProcessGATTMsg (via Veneer)
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SimpleBLECentral_ProcessEvent (via Veneer)
</UL>

<P><STRONG><a name="[f0]"></a>ATT_PrepareWriteRsp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessPrepareWriteReq (via Veneer)
</UL>

<P><STRONG><a name="[e9]"></a>ATT_ReadBlobRsp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessMsg (via Veneer)
</UL>

<P><STRONG><a name="[f2]"></a>ATT_ReadByGrpTypeRsp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessReadByGrpTypeReq (via Veneer)
</UL>

<P><STRONG><a name="[f3]"></a>ATT_ReadByTypeRsp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessReadByTypeReq (via Veneer)
</UL>

<P><STRONG><a name="[f4]"></a>ATT_ReadMultiRsp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessReadMultiReq (via Veneer)
</UL>

<P><STRONG><a name="[e8]"></a>ATT_ReadRsp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessMsg (via Veneer)
</UL>

<P><STRONG><a name="[166]"></a>ATT_SetMTUSizeMax</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simpleBLECentralEventCB (via Veneer)
</UL>

<P><STRONG><a name="[f5]"></a>ATT_WriteRsp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessWriteReq (via Veneer)
</UL>

<P><STRONG><a name="[d6]"></a>GAP_Authenticate</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapBondMgrAuthenticate (via Veneer)
</UL>

<P><STRONG><a name="[d7]"></a>GAP_Bond</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapBondMgrBondReq (via Veneer)
</UL>

<P><STRONG><a name="[7d]"></a>GAP_CentConnRegister</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_DeviceInit (via Veneer)
</UL>

<P><STRONG><a name="[7c]"></a>GAP_CentDevMgrInit</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_DeviceInit (via Veneer)
</UL>

<P><STRONG><a name="[76]"></a>GAP_DeviceDiscoveryRequest</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPCentralRole_StartDiscovery (via Veneer)
</UL>

<P><STRONG><a name="[6e]"></a>GAP_EstablishLinkReq</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPCentralRole_EstablishLink (via Veneer)
</UL>

<P><STRONG><a name="[12e]"></a>GAP_Init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osalInitTasks (via Veneer)
</UL>

<P><STRONG><a name="[5b]"></a>GAP_NumActiveConnections</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPBondMgr_SetParameter (via Veneer)
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPBondMgr_ProcessGAPMsg (via Veneer)
</UL>

<P><STRONG><a name="[7a]"></a>GAP_ParamsInit</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_DeviceInit (via Veneer)
</UL>

<P><STRONG><a name="[54]"></a>GAP_PasscodeUpdate</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPBondMgr_ProcessGAPMsg (via Veneer)
</UL>

<P><STRONG><a name="[7f]"></a>GAP_PeriDevMgrInit</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_DeviceInit (via Veneer)
</UL>

<P><STRONG><a name="[1b]"></a>GAP_ProcessEvent</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> osal_simpleblecentral.o(.constdata)
</UL>
<P><STRONG><a name="[70]"></a>GAP_RegisterForHCIMsgs</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPCentralRole_Init (via Veneer)
</UL>

<P><STRONG><a name="[64]"></a>GAP_ResolvePrivateAddr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPBondMgr_ResolveAddr (via Veneer)
</UL>

<P><STRONG><a name="[7b]"></a>GAP_SecParamsInit</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_DeviceInit (via Veneer)
</UL>

<P><STRONG><a name="[49]"></a>GAP_SendSlaveSecurityRequest</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPBondMgr_LinkEst (via Veneer)
</UL>

<P><STRONG><a name="[60]"></a>GAP_SetParamValue</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPBondMgr_SetParameter (via Veneer)
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPBondMgr_Register (via Veneer)
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SimpleBLECentral_Init (via Veneer)
</UL>

<P><STRONG><a name="[44]"></a>GAP_Signable</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPBondMgr_LinkEst (via Veneer)
</UL>

<P><STRONG><a name="[5a]"></a>GAP_TerminateAuth</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPBondMgr_ProcessGAPMsg (via Veneer)
</UL>

<P><STRONG><a name="[57]"></a>GAP_TerminateLinkReq</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPBondMgr_ProcessGAPMsg (via Veneer)
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPCentralRole_TerminateLink (via Veneer)
</UL>

<P><STRONG><a name="[ef]"></a>GATT_AppCompletedMsg</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessMsg (via Veneer)
</UL>

<P><STRONG><a name="[170]"></a>GATT_DiscAllChars</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simpleBLEGATTDiscoveryEvent (via Veneer)
</UL>

<P><STRONG><a name="[b0]"></a>GATT_DiscAllPrimaryServices</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SimpleBLECentral_ProcessEvent (via Veneer)
</UL>

<P><STRONG><a name="[167]"></a>GATT_ExchangeMTU</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simpleBLECentralEventCB (via Veneer)
</UL>

<P><STRONG><a name="[91]"></a>GATT_FindHandle</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_ReadAttr (via Veneer)
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_WriteAttr (via Veneer)
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessWriteReq (via Veneer)
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessReadMultiReq (via Veneer)
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessPrepareWriteReq (via Veneer)
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessMsg (via Veneer)
</UL>

<P><STRONG><a name="[db]"></a>GATT_FindHandleUUID</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapBondMgr_SyncCharCfg (via Veneer)
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessReadByTypeReq (via Veneer)
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessReadByGrpTypeReq (via Veneer)
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessFindByTypeValueReq (via Veneer)
</UL>

<P><STRONG><a name="[92]"></a>GATT_FindNextAttr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_ReadAttr (via Veneer)
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapBondMgr_SyncCharCfg (via Veneer)
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessReadByGrpTypeReq (via Veneer)
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessFindByTypeValueReq (via Veneer)
</UL>

<P><STRONG><a name="[12f]"></a>GATT_Init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osalInitTasks (via Veneer)
</UL>

<P><STRONG><a name="[a9]"></a>GATT_InitClient</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SimpleBLECentral_Init (via Veneer)
</UL>

<P><STRONG><a name="[1c]"></a>GATT_ProcessEvent</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> osal_simpleblecentral.o(.constdata)
</UL>
<P><STRONG><a name="[16e]"></a>GATT_ReadCharValue</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simpleBLECentral_ReadWriteNotifyTest (via Veneer)
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simpleBLECentral_CharacteristicTest (via Veneer)
</UL>

<P><STRONG><a name="[aa]"></a>GATT_RegisterForInd</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SimpleBLECentral_Init (via Veneer)
</UL>

<P><STRONG><a name="[86]"></a>GATT_RegisterForReq</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_Init (via Veneer)
</UL>

<P><STRONG><a name="[95]"></a>GATT_RegisterService</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_RegisterService (via Veneer)
</UL>

<P><STRONG><a name="[99]"></a>GATT_ServiceChangedInd</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_SendServiceChangedInd (via Veneer)
</UL>

<P><STRONG><a name="[f1]"></a>GATT_VerifyReadPermissions</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessReadByTypeReq (via Veneer)
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessReadByGrpTypeReq (via Veneer)
</UL>

<P><STRONG><a name="[16f]"></a>GATT_WriteCharValue</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simpleBLECentral_CharacteristicTest (via Veneer)
</UL>

<P><STRONG><a name="[b7]"></a>GATT_WriteNoRsp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simpleBLECentral_ReadWriteNotifyTest (via Veneer)
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SimpleBLECentral_ProcessEvent (via Veneer)
</UL>

<P><STRONG><a name="[12c]"></a>HCI_Init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osalInitTasks (via Veneer)
</UL>

<P><STRONG><a name="[ad]"></a>HCI_LE_AddWhiteListCmd</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapBondMgr_SyncWhiteList (via Veneer)
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SimpleBLECentral_Init (via Veneer)
</UL>

<P><STRONG><a name="[dc]"></a>HCI_LE_ClearWhiteListCmd</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapBondMgr_SyncWhiteList (via Veneer)
</UL>

<P><STRONG><a name="[79]"></a>HCI_LE_ConnUpdateCmd</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPCentralRole_UpdateLink (via Veneer)
</UL>

<P><STRONG><a name="[16b]"></a>HCI_LE_ReadRemoteUsedFeaturesCmd</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simpleBLECentralEventCB (via Veneer)
</UL>

<P><STRONG><a name="[b4]"></a>HCI_LE_SetDataLengthCmd</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SimpleBLECentral_ProcessEvent (via Veneer)
</UL>

<P><STRONG><a name="[169]"></a>HCI_LE_SetDefaultPhyMode</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simpleBLECentralEventCB (via Veneer)
</UL>

<P><STRONG><a name="[b2]"></a>HCI_LE_SetHostChanClassificationCmd</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SimpleBLECentral_ProcessEvent (via Veneer)
</UL>

<P><STRONG><a name="[b5]"></a>HCI_LE_SetPhyMode</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SimpleBLECentral_ProcessEvent (via Veneer)
</UL>

<P><STRONG><a name="[ca]"></a>HCI_PPLUS_ConnEventDoneNoticeCmd</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simpleBLECentralProcessGATTMsg (via Veneer)
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simpleBLECentralEventCB (via Veneer)
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;centralTestVectorProcess (via Veneer)
</UL>

<P><STRONG><a name="[19]"></a>HCI_ProcessEvent</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> osal_simpleblecentral.o(.constdata)
</UL>
<P><STRONG><a name="[16c]"></a>HCI_ReadRemoteVersionInfoCmd</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simpleBLECentralEventCB (via Veneer)
</UL>

<P><STRONG><a name="[e0]"></a>HCI_ReadRssiCmd</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapCentralRole_ProcessOSALMsg (via Veneer)
</UL>

<P><STRONG><a name="[12d]"></a>L2CAP_Init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osalInitTasks (via Veneer)
</UL>

<P><STRONG><a name="[1a]"></a>L2CAP_ProcessEvent</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> osal_simpleblecentral.o(.constdata)
</UL>
<P><STRONG><a name="[12b]"></a>LL_Init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osalInitTasks (via Veneer)
</UL>

<P><STRONG><a name="[cd]"></a>LL_PLUS_PerStasReadByChn</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_PerStatsProcess (via Veneer)
</UL>

<P><STRONG><a name="[ce]"></a>LL_PLUS_PerStatsReset</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_PerStatsProcess (via Veneer)
</UL>

<P><STRONG><a name="[18]"></a>LL_ProcessEvent</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> osal_simpleblecentral.o(.constdata)
</UL>
<P><STRONG><a name="[9f]"></a>LL_evt_schedule</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_SetScanControl1 (via Veneer)
</UL>

<P><STRONG><a name="[130]"></a>SM_Init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osalInitTasks (via Veneer)
</UL>

<P><STRONG><a name="[7e]"></a>SM_InitiatorInit</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_DeviceInit (via Veneer)
</UL>

<P><STRONG><a name="[1d]"></a>SM_ProcessEvent</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> osal_simpleblecentral.o(.constdata)
</UL>
<P><STRONG><a name="[80]"></a>SM_ResponderInit</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_DeviceInit (via Veneer)
</UL>

<P><STRONG><a name="[53]"></a>__ARM_common_switch8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ggs_ReadAttrCB (via Veneer)
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GGS_SetParameter (via Veneer)
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPBondMgr_SetParameter (via Veneer)
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPBondMgr_ProcessGAPMsg (via Veneer)
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_DeviceInit (via Veneer)
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_rom_code_ini (via Veneer)
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simpleBLEAnalysisADVDATA (via Veneer)
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;centralTestVectorProcess (via Veneer)
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_tp_cal (via Veneer)
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_rxDcoc_cfg (via Veneer)
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llSetupAdv1 (via Veneer)
</UL>

<P><STRONG><a name="[115]"></a>boot_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_rom_code_ini (via Veneer)
</UL>

<P><STRONG><a name="[3a]"></a>clearTimerInt</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_TIMER_IRQHandler (via Veneer)
</UL>

<P><STRONG><a name="[bf]"></a>clock_time_rtc</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitRTCCount (via Veneer)
</UL>

<P><STRONG><a name="[10d]"></a>disableSleep</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwrmgr_init (via Veneer)
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwrmgr_unlock (via Veneer)
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwrmgr_lock (via Veneer)
</UL>

<P><STRONG><a name="[10e]"></a>enableSleep</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwrmgr_init (via Veneer)
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwrmgr_unlock (via Veneer)
</UL>

<P><STRONG><a name="[cb]"></a>getMcuPrecisionCount</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simpleBLECentralEventCB (via Veneer)
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;centralTestVectorProcess (via Veneer)
</UL>

<P><STRONG><a name="[140]"></a>get_timer3_count</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_current_time (via Veneer)
</UL>

<P><STRONG><a name="[146]"></a>rom_hal_uart_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_direct_test (via Veneer)
</UL>

<P><STRONG><a name="[152]"></a>rom_hal_uart_send_byte</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_dtm_evt_send (via Veneer)
</UL>

<P><STRONG><a name="[147]"></a>rom_hal_uart_tx</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_direct_test (via Veneer)
</UL>

<P><STRONG><a name="[55]"></a>linkDB_Find</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPBondMgr_UpdateCharCfg (via Veneer)
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPBondMgr_ServiceChangeInd (via Veneer)
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPBondMgr_ProcessGAPMsg (via Veneer)
</UL>

<P><STRONG><a name="[67]"></a>linkDB_PerformFunc</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPBondMgr_ServiceChangeInd (via Veneer)
</UL>

<P><STRONG><a name="[87]"></a>linkDB_Register</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_Init (via Veneer)
</UL>

<P><STRONG><a name="[de]"></a>linkDB_State</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapCentralRole_ProcessOSALMsg (via Veneer)
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_HandleConnStatusCB (via Veneer)
</UL>

<P><STRONG><a name="[16a]"></a>llInitFeatureSet2MPHY</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simpleBLECentralEventCB (via Veneer)
</UL>

<P><STRONG><a name="[168]"></a>llInitFeatureSetDLE</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simpleBLECentralEventCB (via Veneer)
</UL>

<P><STRONG><a name="[122]"></a>llSetupDirectedAdvEvt</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llSetupAdv1 (via Veneer)
</UL>

<P><STRONG><a name="[124]"></a>llSetupNonConnectableAdvEvt</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llSetupAdv1 (via Veneer)
</UL>

<P><STRONG><a name="[125]"></a>llSetupScannableAdvEvt</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llSetupAdv1 (via Veneer)
</UL>

<P><STRONG><a name="[123]"></a>llSetupUndirectedAdvEvt</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llSetupAdv1 (via Veneer)
</UL>

<P><STRONG><a name="[a1]"></a>ll_debug_output</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_SetScanControl1 (via Veneer)
</UL>

<P><STRONG><a name="[14e]"></a>ll_hw_clr_irq</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_dtm_ext_rx_demod_burst (via Veneer)
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_direct_test (via Veneer)
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_dtm_trigged (via Veneer)
</UL>

<P><STRONG><a name="[14d]"></a>ll_hw_get_irq_status</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_dtm_ext_rx_demod_burst (via Veneer)
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_direct_test (via Veneer)
</UL>

<P><STRONG><a name="[126]"></a>ll_hw_get_tr_mode</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_hw_go1 (via Veneer)
</UL>

<P><STRONG><a name="[11f]"></a>ll_hw_ign_rfifo</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llSetupAdv1 (via Veneer)
</UL>

<P><STRONG><a name="[120]"></a>ll_hw_rst_rfifo</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llSetupAdv1 (via Veneer)
</UL>

<P><STRONG><a name="[121]"></a>ll_hw_rst_tfifo</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_dtm_trigged (via Veneer)
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llSetupAdv1 (via Veneer)
</UL>

<P><STRONG><a name="[15e]"></a>ll_hw_set_irq</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_dtm_trigged (via Veneer)
</UL>

<P><STRONG><a name="[a2]"></a>ll_hw_set_rx_timeout</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_SetScanControl1 (via Veneer)
</UL>

<P><STRONG><a name="[160]"></a>ll_hw_set_srx</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_dtm_trigged (via Veneer)
</UL>

<P><STRONG><a name="[15f]"></a>ll_hw_set_stx</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_dtm_trigged (via Veneer)
</UL>

<P><STRONG><a name="[15a]"></a>ll_hw_set_timing</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_dtm_trigged (via Veneer)
</UL>

<P><STRONG><a name="[14c]"></a>ll_hw_set_trx_settle</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_dtm_ext_tx_mod_burst (via Veneer)
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_direct_test (via Veneer)
</UL>

<P><STRONG><a name="[14f]"></a>ll_hw_trigger</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_dtm_ext_tx_mod_burst (via Veneer)
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_dtm_ext_rx_demod_burst (via Veneer)
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_direct_test (via Veneer)
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_dtm_trigged (via Veneer)
</UL>

<P><STRONG><a name="[162]"></a>ll_hw_write_tfifo</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_dtm_zigbee_pkt_gen (via Veneer)
</UL>

<P><STRONG><a name="[df]"></a>osal_CbTimerStart</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapCentralRole_ProcessOSALMsg (via Veneer)
</UL>

<P><STRONG><a name="[6c]"></a>osal_CbTimerStop</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPCentralRole_CancelRssi (via Veneer)
</UL>

<P><STRONG><a name="[d9]"></a>osal_clear_event</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapBondMgrEraseBonding (via Veneer)
</UL>

<P><STRONG><a name="[c7]"></a>osal_init_system</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_main (via Veneer)
</UL>

<P><STRONG><a name="[43]"></a>osal_isbufset</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPBondMgr_ResolveAddr (via Veneer)
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPBondMgr_LinkEst (via Veneer)
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapBondMgr_SyncWhiteList (via Veneer)
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapBondMgrUpdateCharCfg (via Veneer)
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapBondMgrEraseBonding (via Veneer)
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapBondMgrChangeState (via Veneer)
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapBondMgrBondTotal (via Veneer)
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapBondMgrAddBond (via Veneer)
</UL>

<P><STRONG><a name="[96]"></a>osal_mem_alloc</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_RegisterService (via Veneer)
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simpleBLECentral_ReadWriteNotifyTest (via Veneer)
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simpleBLECentral_CharacteristicTest (via Veneer)
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SimpleBLECentral_ProcessEvent (via Veneer)
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osalInitTasks (via Veneer)
</UL>

<P><STRONG><a name="[b8]"></a>osal_mem_free</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simpleBLECentral_ReadWriteNotifyTest (via Veneer)
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simpleBLECentral_CharacteristicTest (via Veneer)
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SimpleBLECentral_ProcessEvent (via Veneer)
</UL>

<P><STRONG><a name="[128]"></a>osal_mem_set_heap</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main (via Veneer)
</UL>

<P><STRONG><a name="[63]"></a>osal_memcmp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPBondMgr_ResolveAddr (via Veneer)
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapBondMgrFindAddr (via Veneer)
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simpleBLECentral_LinkDevice (via Veneer)
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simpleBLEAddDeviceInfo (via Veneer)
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessFindByTypeValueReq (via Veneer)
</UL>

<P><STRONG><a name="[56]"></a>osal_memcpy</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ggs_WriteAttrCB (via Veneer)
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ggs_ReadAttrCB (via Veneer)
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_snv_write (via Veneer)
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_snv_read (via Veneer)
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GGS_SetParameter (via Veneer)
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_ReadAttr (via Veneer)
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPBondMgr_SetParameter (via Veneer)
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPBondMgr_ResolveAddr (via Veneer)
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPBondMgr_ProcessGAPMsg (via Veneer)
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapBondMgrGetPublicAddr (via Veneer)
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapBondMgrAuthenticate (via Veneer)
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapBondMgrAddBond (via Veneer)
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simpleBLEGATTDiscoveryEvent (via Veneer)
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simpleBLECentral_ReadWriteNotifyTest (via Veneer)
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simpleBLECentral_CharacteristicTest (via Veneer)
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simpleBLECentralEventCB (via Veneer)
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simpleBLEAnalysisADVDATA (via Veneer)
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simpleBLEAddDeviceInfo (via Veneer)
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SimpleBLECentral_ProcessEvent (via Veneer)
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPCentralRole_SetParameter (via Veneer)
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPCentralRole_EstablishLink (via Veneer)
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapCentralRole_ProcessGAPMsg (via Veneer)
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessReadMultiReq (via Veneer)
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessReadByTypeReq (via Veneer)
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessReadByGrpTypeReq (via Veneer)
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessPrepareWriteReq (via Veneer)
</UL>

<P><STRONG><a name="[41]"></a>osal_memset</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_snv_write (via Veneer)
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GGS_SetParameter (via Veneer)
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_ReadAttr (via Veneer)
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPBondMgr_ProcessGAPMsg (via Veneer)
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPBondMgr_LinkEst (via Veneer)
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapBondMgrUpdateCharCfg (via Veneer)
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapBondMgrReadBonds (via Veneer)
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapBondMgrEraseBonding (via Veneer)
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapBondMgrBondReq (via Veneer)
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapBondMgrAuthenticate (via Veneer)
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapBondMgrAddBond (via Veneer)
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simpleBLECentralEventCB (via Veneer)
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;centralTestVectorProcess (via Veneer)
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SimpleBLECentral_ProcessEvent (via Veneer)
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osalInitTasks (via Veneer)
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_SetNumPrepareWrites (via Veneer)
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessFindByTypeValueReq (via Veneer)
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessExecuteWriteReq (via Veneer)
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_HandleConnStatusCB (via Veneer)
</UL>

<P><STRONG><a name="[97]"></a>osal_msg_allocate</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapCentralRole_timerCB (via Veneer)
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_SendCCCUpdatedEvent (via Veneer)
</UL>

<P><STRONG><a name="[4e]"></a>osal_msg_deallocate</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPBondMgr_ProcessEvent (via Veneer)
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapBondFreeAuthEvt (via Veneer)
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SimpleBLECentral_ProcessEvent (via Veneer)
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPCentralRole_ProcessEvent (via Veneer)
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_ProcessEvent (via Veneer)
</UL>

<P><STRONG><a name="[4a]"></a>osal_msg_receive</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPBondMgr_ProcessEvent (via Veneer)
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SimpleBLECentral_ProcessEvent (via Veneer)
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPCentralRole_ProcessEvent (via Veneer)
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_ProcessEvent (via Veneer)
</UL>

<P><STRONG><a name="[98]"></a>osal_msg_send</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapCentralRole_timerCB (via Veneer)
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_SendCCCUpdatedEvent (via Veneer)
</UL>

<P><STRONG><a name="[c8]"></a>osal_pwrmgr_device</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_main (via Veneer)
</UL>

<P><STRONG><a name="[68]"></a>osal_revmemcpy</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPBondMgr_SetParameter (via Veneer)
</UL>

<P><STRONG><a name="[50]"></a>osal_set_event</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPBondMgr_ProcessGAPMsg (via Veneer)
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPBondMgr_ProcessEvent (via Veneer)
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simpleBLECentralEventCB (via Veneer)
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;centralTestVectorProcess (via Veneer)
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SimpleBLECentral_Init (via Veneer)
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llSetupAdv1 (via Veneer)
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_SetScanControl1 (via Veneer)
</UL>

<P><STRONG><a name="[c9]"></a>osal_start_system</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_main (via Veneer)
</UL>

<P><STRONG><a name="[b9]"></a>osal_start_timerEx</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simpleBLEGATTDiscoveryEvent (via Veneer)
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simpleBLECentral_ReadWriteNotifyTest (via Veneer)
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simpleBLECentral_LinkDevice (via Veneer)
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simpleBLECentral_CharacteristicTest (via Veneer)
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simpleBLECentralProcessGATTMsg (via Veneer)
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simpleBLECentralEventCB (via Veneer)
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SimpleBLECentral_ProcessEvent (via Veneer)
</UL>

<P><STRONG><a name="[bc]"></a>osal_stop_timerEx</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SimpleBLECentral_ProcessEvent (via Veneer)
</UL>

<P><STRONG><a name="[94]"></a>osal_strlen</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ggs_WriteAttrCB (via Veneer)
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ggs_ReadAttrCB (via Veneer)
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_ReadAttr (via Veneer)
</UL>

<P><STRONG><a name="[a3]"></a>read_current_fine_time</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SimpleBLECentral_ProcessEvent (via Veneer)
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_SetScanControl1 (via Veneer)
</UL>

<P><STRONG><a name="[127]"></a>set_max_length</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_hw_go1 (via Veneer)
</UL>

<P><STRONG><a name="[116]"></a>wakeup_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_rom_code_ini (via Veneer)
</UL>

<P><STRONG><a name="[161]"></a>zigbee_crc16_gen</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_dtm_zigbee_pkt_gen (via Veneer)
</UL>

<P><STRONG><a name="[8]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_armcm0.o(.text)
</UL>
<P><STRONG><a name="[179]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[30]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[39]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[17a]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[17b]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[17c]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[17d]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[17e]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_armcm0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_armcm0.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_armcm0.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_armcm0.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_armcm0.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_armcm0.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_armcm0.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_armcm0.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_armcm0.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_armcm0.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_armcm0.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_armcm0.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>AACI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_armcm0.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AACI_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AACI_IRQHandler
</UL>

<P><STRONG><a name="[17f]"></a>CAN_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_armcm0.o(.text), UNUSED)

<P><STRONG><a name="[180]"></a>CHLCD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_armcm0.o(.text), UNUSED)

<P><STRONG><a name="[181]"></a>CLCD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_armcm0.o(.text), UNUSED)

<P><STRONG><a name="[182]"></a>CPU_CLCD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_armcm0.o(.text), UNUSED)

<P><STRONG><a name="[183]"></a>ENET_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_armcm0.o(.text), UNUSED)

<P><STRONG><a name="[184]"></a>FLEXRAY_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_armcm0.o(.text), UNUSED)

<P><STRONG><a name="[185]"></a>I2C_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_armcm0.o(.text), UNUSED)

<P><STRONG><a name="[186]"></a>LIN_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_armcm0.o(.text), UNUSED)

<P><STRONG><a name="[187]"></a>MCIA_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_armcm0.o(.text), UNUSED)

<P><STRONG><a name="[188]"></a>MCIB_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_armcm0.o(.text), UNUSED)

<P><STRONG><a name="[189]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_armcm0.o(.text), UNUSED)

<P><STRONG><a name="[18a]"></a>SPI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_armcm0.o(.text), UNUSED)

<P><STRONG><a name="[18b]"></a>TIM0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_armcm0.o(.text), UNUSED)

<P><STRONG><a name="[18c]"></a>TIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_armcm0.o(.text), UNUSED)

<P><STRONG><a name="[18d]"></a>UART0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_armcm0.o(.text), UNUSED)

<P><STRONG><a name="[18e]"></a>UART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_armcm0.o(.text), UNUSED)

<P><STRONG><a name="[18f]"></a>UART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_armcm0.o(.text), UNUSED)

<P><STRONG><a name="[190]"></a>UART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_armcm0.o(.text), UNUSED)

<P><STRONG><a name="[191]"></a>UART4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_armcm0.o(.text), UNUSED)

<P><STRONG><a name="[192]"></a>USBDC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_armcm0.o(.text), UNUSED)

<P><STRONG><a name="[193]"></a>USBHC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_armcm0.o(.text), UNUSED)

<P><STRONG><a name="[194]"></a>WDT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_armcm0.o(.text), UNUSED)

<P><STRONG><a name="[9d]"></a>__aeabi_memcpy</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GGS_SetParameter
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;txmit_buf_use_tx_buf
</UL>

<P><STRONG><a name="[195]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[196]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[34]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[197]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[198]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[33]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;phy_printf
</UL>

<P><STRONG><a name="[104]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwrmgr_init
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_init
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_init
</UL>

<P><STRONG><a name="[199]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[35]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[36]"></a>__aeabi_uldivmod</STRONG> (Thumb, 96 bytes, Stack size 48 bytes, uldiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[31]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[19a]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[38]"></a>__aeabi_llsl</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, llshl.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[19b]"></a>__semihosting_library_function</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, semi.o(.text), UNUSED)

<P><STRONG><a name="[19c]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[37]"></a>__aeabi_llsr</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, llushr.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[19d]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[19e]"></a>__I$use$semihosting$fputc</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, iusesemip.o(.text), UNUSED)

<P><STRONG><a name="[19f]"></a>__decompress</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[1a0]"></a>__decompress1</STRONG> (Thumb, 86 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[2b]"></a>AP_TIMER_IRQHandler</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, ap_timer.o(i.AP_TIMER_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = AP_TIMER_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clearTimerInt (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jump_table.o(jump_table_mem_area)
</UL>
<P><STRONG><a name="[3b]"></a>GAPBondMgr_Init</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, gapbondmgr.o(i.GAPBondMgr_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = GAPBondMgr_Init &rArr; gapBondMgrReadBonds &rArr; gapBondSetupPrivFlag &rArr; GGS_SetParameter &rArr; ggs_SetAttrWPermit
</UL>
<BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapBondMgrReadBonds
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osalInitTasks
</UL>

<P><STRONG><a name="[3d]"></a>GAPBondMgr_LinkEst</STRONG> (Thumb, 292 bytes, Stack size 88 bytes, gapbondmgr.o(i.GAPBondMgr_LinkEst))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = GAPBondMgr_LinkEst &rArr; GAPBondMgr_ResolveAddr &rArr; gapBondMgrGetPublicAddr &rArr; osal_snv_read
</UL>
<BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_snv_read
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memset (via Veneer)
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_isbufset (via Veneer)
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_UpdateCharCfg
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_SendServiceChangedInd
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_Signable (via Veneer)
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_SendSlaveSecurityRequest (via Veneer)
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPBondMgr_ResolveAddr
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapBondMgrInvertCharCfgItem
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapBondMgrGetStateFlags
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapBondMgrBondReq
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapBondMgrAuthenticate
</UL>
<BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapCentralRole_ProcessGAPMsg
</UL>

<P><STRONG><a name="[1f]"></a>GAPBondMgr_ProcessEvent</STRONG> (Thumb, 172 bytes, Stack size 16 bytes, gapbondmgr.o(i.GAPBondMgr_ProcessEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = GAPBondMgr_ProcessEvent &rArr; GAPBondMgr_ProcessGAPMsg &rArr; GAPBondMgr_SetParameter &rArr; gapBondMgrEraseAllBondings &rArr; gapBondMgrEraseBonding &rArr; osal_snv_write &rArr; snvwr &rArr; ProgramWord
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_set_event (via Veneer)
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_msg_receive (via Veneer)
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_msg_deallocate (via Veneer)
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPBondMgr_UpdateCharCfg
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPBondMgr_ServiceChangeInd
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPBondMgr_ProcessGAPMsg
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapBondMgr_SyncCharCfg
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapBondMgrAddBond
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapBondFreeAuthEvt
</UL>
<BR>[Address Reference Count : 1]<UL><LI> osal_simpleblecentral.o(.constdata)
</UL>
<P><STRONG><a name="[4b]"></a>GAPBondMgr_ProcessGAPMsg</STRONG> (Thumb, 592 bytes, Stack size 40 bytes, gapbondmgr.o(i.GAPBondMgr_ProcessGAPMsg))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = GAPBondMgr_ProcessGAPMsg &rArr; GAPBondMgr_SetParameter &rArr; gapBondMgrEraseAllBondings &rArr; gapBondMgrEraseBonding &rArr; osal_snv_write &rArr; snvwr &rArr; ProgramWord
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_snv_write
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_snv_compact
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_set_event (via Veneer)
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memset (via Veneer)
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkDB_Find (via Veneer)
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_TerminateLinkReq (via Veneer)
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_TerminateAuth (via Veneer)
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_PasscodeUpdate (via Veneer)
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_NumActiveConnections (via Veneer)
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPBondMgr_SetParameter
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPBondMgr_ResolveAddr
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapBondMgrReadBonds
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapBondMgrGetStateFlags
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapBondMgrEraseBonding
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapBondMgrEraseAllBondings
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapBondMgrBondReq
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapBondMgrAuthenticate
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapBondMgrAddBond
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy (via Veneer)
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPBondMgr_ProcessEvent
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapCentralRole_ProcessGAPMsg
</UL>

<P><STRONG><a name="[5f]"></a>GAPBondMgr_Register</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, gapbondmgr.o(i.GAPBondMgr_Register))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GAPBondMgr_Register
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_RegisterForMsg
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_SetParamValue (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SimpleBLECentral_ProcessEvent
</UL>

<P><STRONG><a name="[3e]"></a>GAPBondMgr_ResolveAddr</STRONG> (Thumb, 178 bytes, Stack size 40 bytes, gapbondmgr.o(i.GAPBondMgr_ResolveAddr))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = GAPBondMgr_ResolveAddr &rArr; gapBondMgrGetPublicAddr &rArr; osal_snv_read
</UL>
<BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_snv_read
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcmp (via Veneer)
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_isbufset (via Veneer)
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_ResolvePrivateAddr (via Veneer)
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapBondMgrGetPublicAddr
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapBondMgrFindAddr
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPBondMgr_UpdateCharCfg
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPBondMgr_SetParameter
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPBondMgr_ServiceChangeInd
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPBondMgr_ProcessGAPMsg
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPBondMgr_LinkEst
</UL>

<P><STRONG><a name="[4c]"></a>GAPBondMgr_ServiceChangeInd</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, gapbondmgr.o(i.GAPBondMgr_ServiceChangeInd))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = GAPBondMgr_ServiceChangeInd &rArr; gapBondMgrChangeState &rArr; osal_snv_write &rArr; snvwr &rArr; ProgramWord
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkDB_PerformFunc (via Veneer)
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkDB_Find (via Veneer)
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPBondMgr_ResolveAddr
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapBondMgrSendServiceChange
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapBondMgrChangeState
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPBondMgr_ProcessEvent
</UL>

<P><STRONG><a name="[58]"></a>GAPBondMgr_SetParameter</STRONG> (Thumb, 358 bytes, Stack size 32 bytes, gapbondmgr.o(i.GAPBondMgr_SetParameter))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = GAPBondMgr_SetParameter &rArr; gapBondMgrEraseAllBondings &rArr; gapBondMgrEraseBonding &rArr; osal_snv_write &rArr; snvwr &rArr; ProgramWord
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_snv_compact
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_revmemcpy (via Veneer)
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_SetParamValue (via Veneer)
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_NumActiveConnections (via Veneer)
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPBondMgr_ResolveAddr
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapBondMgrReadBonds
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapBondMgrEraseBonding
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapBondMgrEraseAllBondings
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy (via Veneer)
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPBondMgr_ProcessGAPMsg
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SimpleBLECentral_Init
</UL>

<P><STRONG><a name="[4d]"></a>GAPBondMgr_UpdateCharCfg</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, gapbondmgr.o(i.GAPBondMgr_UpdateCharCfg))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = GAPBondMgr_UpdateCharCfg &rArr; gapBondMgrUpdateCharCfg &rArr; osal_snv_write &rArr; snvwr &rArr; ProgramWord
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkDB_Find (via Veneer)
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPBondMgr_ResolveAddr
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapBondMgrUpdateCharCfg
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPBondMgr_ProcessEvent
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapBondMgr_SyncCharCfg
</UL>

<P><STRONG><a name="[6a]"></a>GAPCentralRole_CancelRssi</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, central.o(i.GAPCentralRole_CancelRssi))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GAPCentralRole_CancelRssi
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_CbTimerStop (via Veneer)
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapCentralRole_RssiFind
</UL>
<BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapCentralRole_ProcessGAPMsg
</UL>

<P><STRONG><a name="[6d]"></a>GAPCentralRole_EstablishLink</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, central.o(i.GAPCentralRole_EstablishLink))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GAPCentralRole_EstablishLink
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy (via Veneer)
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_EstablishLinkReq (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simpleBLECentral_LinkDevice
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simpleBLECentralEventCB
</UL>

<P><STRONG><a name="[6f]"></a>GAPCentralRole_Init</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, central.o(i.GAPCentralRole_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GAPCentralRole_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_RegisterForHCIMsgs (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osalInitTasks
</UL>

<P><STRONG><a name="[1e]"></a>GAPCentralRole_ProcessEvent</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, central.o(i.GAPCentralRole_ProcessEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = GAPCentralRole_ProcessEvent &rArr; gapCentralRole_ProcessOSALMsg &rArr; gapCentralRole_ProcessGAPMsg &rArr; GAPBondMgr_ProcessGAPMsg &rArr; GAPBondMgr_SetParameter &rArr; gapBondMgrEraseAllBondings &rArr; gapBondMgrEraseBonding &rArr; osal_snv_write &rArr; snvwr &rArr; ProgramWord
</UL>
<BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_msg_receive (via Veneer)
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_msg_deallocate (via Veneer)
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapCentralRole_ProcessOSALMsg
</UL>
<BR>[Address Reference Count : 1]<UL><LI> osal_simpleblecentral.o(.constdata)
</UL>
<P><STRONG><a name="[72]"></a>GAPCentralRole_SetParameter</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, central.o(i.GAPCentralRole_SetParameter))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GAPCentralRole_SetParameter
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SimpleBLECentral_Init
</UL>

<P><STRONG><a name="[73]"></a>GAPCentralRole_StartDevice</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, central.o(i.GAPCentralRole_StartDevice))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = GAPCentralRole_StartDevice &rArr; GAP_DeviceInit
</UL>
<BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_DeviceInit
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SimpleBLECentral_ProcessEvent
</UL>

<P><STRONG><a name="[75]"></a>GAPCentralRole_StartDiscovery</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, central.o(i.GAPCentralRole_StartDiscovery))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GAPCentralRole_StartDiscovery
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_DeviceDiscoveryRequest (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SimpleBLECentral_ProcessEvent
</UL>

<P><STRONG><a name="[77]"></a>GAPCentralRole_TerminateLink</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, central.o(i.GAPCentralRole_TerminateLink))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GAPCentralRole_TerminateLink
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_TerminateLinkReq (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;centralTestVectorProcess
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SimpleBLECentral_ProcessEvent
</UL>

<P><STRONG><a name="[78]"></a>GAPCentralRole_UpdateLink</STRONG> (Thumb, 18 bytes, Stack size 24 bytes, central.o(i.GAPCentralRole_UpdateLink))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GAPCentralRole_UpdateLink
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCI_LE_ConnUpdateCmd (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SimpleBLECentral_ProcessEvent
</UL>

<P><STRONG><a name="[74]"></a>GAP_DeviceInit</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, gap.o(i.GAP_DeviceInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GAP_DeviceInit
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SM_ResponderInit (via Veneer)
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SM_InitiatorInit (via Veneer)
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_SecParamsInit (via Veneer)
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_PeriDevMgrInit (via Veneer)
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_ParamsInit (via Veneer)
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_CentDevMgrInit (via Veneer)
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_CentConnRegister (via Veneer)
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPCentralRole_StartDevice
</UL>

<P><STRONG><a name="[81]"></a>GATTServApp_AddService</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, gattservapp.o(i.GATTServApp_AddService))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GATTServApp_AddService &rArr; GATTServApp_RegisterService
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_RegisterService
</UL>
<BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SimpleBLECentral_Init
</UL>

<P><STRONG><a name="[83]"></a>GATTServApp_Init</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, gattservapp.o(i.GATTServApp_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = GATTServApp_Init &rArr; gattServApp_SetNumPrepareWrites
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATT_RegisterForReq (via Veneer)
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_SetNumPrepareWrites
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkDB_Register (via Veneer)
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_InitCharCfg
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osalInitTasks
</UL>

<P><STRONG><a name="[84]"></a>GATTServApp_InitCharCfg</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, gattservapp.o(i.GATTServApp_InitCharCfg))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GATTServApp_InitCharCfg
</UL>
<BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_FindCharCfgItem
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_Init
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_HandleConnStatusCB
</UL>

<P><STRONG><a name="[89]"></a>GATTServApp_ProcessCCCWriteReq</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, gattservapp.o(i.GATTServApp_ProcessCCCWriteReq))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = GATTServApp_ProcessCCCWriteReq &rArr; GATTServApp_SendCCCUpdatedEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_WriteCharCfg
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_SendCCCUpdatedEvent
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_ReadCharCfg
</UL>
<BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_WriteAttrCB
</UL>

<P><STRONG><a name="[20]"></a>GATTServApp_ProcessEvent</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, gattservapp.o(i.GATTServApp_ProcessEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = GATTServApp_ProcessEvent &rArr; gattServApp_ProcessMsg &rArr; gattServApp_ProcessWriteReq &rArr; phy_printf &rArr; print &rArr; printi &rArr; prints
</UL>
<BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_msg_receive (via Veneer)
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_msg_deallocate (via Veneer)
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessMsg
</UL>
<BR>[Address Reference Count : 1]<UL><LI> osal_simpleblecentral.o(.constdata)
</UL>
<P><STRONG><a name="[8e]"></a>GATTServApp_ReadAttr</STRONG> (Thumb, 534 bytes, Stack size 64 bytes, gattservapp.o(i.GATTServApp_ReadAttr))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = GATTServApp_ReadAttr &rArr; GATTServApp_ReadCharCfg
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_strlen (via Veneer)
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memset (via Veneer)
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATT_FindNextAttr (via Veneer)
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy (via Veneer)
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATT_FindHandle (via Veneer)
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATT_CompareUUID (via Veneer)
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_ReadCharCfg
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_FindServiceCBs
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_FindAuthorizeAttrCB
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapBondMgr_SyncCharCfg
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessReadMultiReq
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessReadByTypeReq
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessReadByGrpTypeReq
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessMsg
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessFindByTypeValueReq
</UL>

<P><STRONG><a name="[8a]"></a>GATTServApp_ReadCharCfg</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, gattservapp.o(i.GATTServApp_ReadCharCfg))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GATTServApp_ReadCharCfg
</UL>
<BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_FindCharCfgItem
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_SendServiceChangedInd
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_ReadAttr
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_ProcessCCCWriteReq
</UL>

<P><STRONG><a name="[61]"></a>GATTServApp_RegisterForMsg</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gattservapp.o(i.GATTServApp_RegisterForMsg))
<BR><BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPBondMgr_Register
</UL>

<P><STRONG><a name="[82]"></a>GATTServApp_RegisterService</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, gattservapp.o(i.GATTServApp_RegisterService))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GATTServApp_RegisterService
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_mem_alloc (via Veneer)
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATT_RegisterService (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GGS_AddService
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_AddService
</UL>

<P><STRONG><a name="[8c]"></a>GATTServApp_SendCCCUpdatedEvent</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, gattservapp.o(i.GATTServApp_SendCCCUpdatedEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GATTServApp_SendCCCUpdatedEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_msg_send (via Veneer)
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_msg_allocate (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_ProcessCCCWriteReq
</UL>

<P><STRONG><a name="[47]"></a>GATTServApp_SendServiceChangedInd</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, gattservapp.o(i.GATTServApp_SendServiceChangedInd))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GATTServApp_SendServiceChangedInd &rArr; GATTServApp_ReadCharCfg
</UL>
<BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATT_ServiceChangedInd (via Veneer)
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_ReadCharCfg
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPBondMgr_LinkEst
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapBondMgrSendServiceChange
</UL>

<P><STRONG><a name="[46]"></a>GATTServApp_UpdateCharCfg</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, gattservapp.o(i.GATTServApp_UpdateCharCfg))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = GATTServApp_UpdateCharCfg &rArr; GATTServApp_WriteAttr
</UL>
<BR>[Calls]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_WriteAttr
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPBondMgr_LinkEst
</UL>

<P><STRONG><a name="[9a]"></a>GATTServApp_WriteAttr</STRONG> (Thumb, 62 bytes, Stack size 48 bytes, gattservapp.o(i.GATTServApp_WriteAttr))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = GATTServApp_WriteAttr
</UL>
<BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATT_FindHandle (via Veneer)
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_FindServiceCBs
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_UpdateCharCfg
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessWriteReq
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessExecuteWriteReq
</UL>

<P><STRONG><a name="[8b]"></a>GATTServApp_WriteCharCfg</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, gattservapp.o(i.GATTServApp_WriteCharCfg))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GATTServApp_WriteCharCfg
</UL>
<BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_FindCharCfgItem
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_ProcessCCCWriteReq
</UL>

<P><STRONG><a name="[9b]"></a>GGS_AddService</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, gapgattserver.o(i.GGS_AddService))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GGS_AddService &rArr; GATTServApp_RegisterService
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_RegisterService
</UL>
<BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SimpleBLECentral_Init
</UL>

<P><STRONG><a name="[9c]"></a>GGS_SetParameter</STRONG> (Thumb, 126 bytes, Stack size 16 bytes, gapgattserver.o(i.GGS_SetParameter))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GGS_SetParameter &rArr; ggs_SetAttrWPermit
</UL>
<BR>[Calls]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ggs_SetAttrWPermit
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memset (via Veneer)
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy (via Veneer)
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapBondSetupPrivFlag
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SimpleBLECentral_Init
</UL>

<P><STRONG><a name="[13]"></a>LL_SetScanControl1</STRONG> (Thumb, 278 bytes, Stack size 24 bytes, patch.o(i.LL_SetScanControl1))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = LL_SetScanControl1 &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_set_event (via Veneer)
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_current_fine_time (via Veneer)
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_hw_set_rx_timeout (via Veneer)
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_debug_output (via Veneer)
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_evt_schedule (via Veneer)
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> patch.o(i.init_config)
</UL>
<P><STRONG><a name="[172]"></a>LOG_CHIP_ID</STRONG> (Thumb, 44 bytes, Stack size 68 bytes, flash_ext.o(i.LOG_CHIP_ID))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = LOG_CHIP_ID
</UL>
<BR>[Called By]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simple_demo_init
</UL>

<P><STRONG><a name="[173]"></a>LOG_CHIP_MADDR</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, flash_ext.o(i.LOG_CHIP_MADDR))
<BR><BR>[Called By]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simple_demo_init
</UL>

<P><STRONG><a name="[174]"></a>LOG_PATCH_DATA_TIME</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, patch.o(i.LOG_PATCH_DATA_TIME))
<BR><BR>[Called By]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simple_demo_init
</UL>

<P><STRONG><a name="[a4]"></a>ProgramWord</STRONG> (Thumb, 164 bytes, Stack size 24 bytes, flash_ext.o(i.ProgramWord))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ProgramWord
</UL>
<BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enable_spif_flash_write
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disable_spif_flash_write
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_internal_bus_busy
</UL>
<BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snvwr
</UL>

<P><STRONG><a name="[ac]"></a>ReadFlash</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, flash_ext.o(i.ReadFlash))
<BR><BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SimpleBLECentral_Init
</UL>

<P><STRONG><a name="[a8]"></a>SimpleBLECentral_Init</STRONG> (Thumb, 260 bytes, Stack size 40 bytes, simpleblecentral.o(i.SimpleBLECentral_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = SimpleBLECentral_Init &rArr; GAPBondMgr_SetParameter &rArr; gapBondMgrEraseAllBondings &rArr; gapBondMgrEraseBonding &rArr; osal_snv_write &rArr; snvwr &rArr; ProgramWord
</UL>
<BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GGS_AddService
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_set_event (via Veneer)
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCI_LE_AddWhiteListCmd (via Veneer)
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GGS_SetParameter
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_SetParamValue (via Veneer)
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPBondMgr_SetParameter
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;phy_printf
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadFlash
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATT_RegisterForInd (via Veneer)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATT_InitClient (via Veneer)
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPCentralRole_SetParameter
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_AddService
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osalInitTasks
</UL>

<P><STRONG><a name="[21]"></a>SimpleBLECentral_ProcessEvent</STRONG> (Thumb, 1388 bytes, Stack size 296 bytes, simpleblecentral.o(i.SimpleBLECentral_ProcessEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 512<LI>Call Chain = SimpleBLECentral_ProcessEvent &rArr; centralTestVectorProcess &rArr; phy_printf &rArr; print &rArr; printi &rArr; prints
</UL>
<BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_msg_receive (via Veneer)
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_msg_deallocate (via Veneer)
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memset (via Veneer)
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod (via Veneer)
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPBondMgr_Register
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy (via Veneer)
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;phy_printf
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_current_fine_time (via Veneer)
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCI_LE_SetPhyMode (via Veneer)
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCI_LE_SetHostChanClassificationCmd (via Veneer)
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCI_LE_SetDataLengthCmd (via Veneer)
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATT_WriteNoRsp (via Veneer)
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATT_DiscAllPrimaryServices (via Veneer)
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATT_GetCurrentMTUSize (via Veneer)
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simpleBLECentral_ReadWriteNotifyTest
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simpleBLECentral_LinkDevice
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simpleBLECentral_CharacteristicTest
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simpleBLECentralProcessGATTMsg
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;centralTestVectorProcess
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPCentralRole_UpdateLink
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPCentralRole_TerminateLink
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPCentralRole_StartDiscovery
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPCentralRole_StartDevice
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_mem_free (via Veneer)
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_mem_alloc (via Veneer)
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_stop_timerEx (via Veneer)
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_timerEx (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> osal_simpleblecentral.o(.constdata)
</UL>
<P><STRONG><a name="[7]"></a>SystemInit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, system_armcm0.o(i.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_armcm0.o(.text)
</UL>
<P><STRONG><a name="[bd]"></a>WaitMs</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, common.o(i.WaitMs))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = WaitMs &rArr; WaitRTCCount
</UL>
<BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod (via Veneer)
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitRTCCount
</UL>
<BR>[Called By]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simple_rfphy_dtm_ext_demo
</UL>

<P><STRONG><a name="[be]"></a>WaitRTCCount</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, common.o(i.WaitRTCCount))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = WaitRTCCount
</UL>
<BR>[Calls]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clock_time_rtc (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitMs
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rc32k_tracking_check
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rc32k_calibration
</UL>

<P><STRONG><a name="[c0]"></a>WaitUs</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, common.o(i.WaitUs))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = WaitUs
</UL>
<BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_read_current_time
</UL>
<BR>[Called By]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simple_rfphy_dtm_ext_demo
</UL>

<P><STRONG><a name="[c2]"></a>__0printf$8</STRONG> (Thumb, 24 bytes, Stack size 24 bytes, printf8.o(i.__0printf$8), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[1a1]"></a>__1printf$8</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf8.o(i.__0printf$8), UNUSED)

<P><STRONG><a name="[a0]"></a>__2printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf8.o(i.__0printf$8))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_SetScanControl1
</UL>

<P><STRONG><a name="[1a2]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[1a3]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[1a4]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[c6]"></a>app_main</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, simpleblecentral_main.o(i.app_main))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = app_main
</UL>
<BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_system (via Veneer)
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_pwrmgr_device (via Veneer)
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_init_system (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[13d]"></a>arry_sort</STRONG> (Thumb, 54 bytes, Stack size 20 bytes, patch.o(i.arry_sort))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = arry_sort
</UL>
<BR>[Called By]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rc32k_tracking_check
</UL>

<P><STRONG><a name="[cc]"></a>check_PerStatsProcess</STRONG> (Thumb, 26 bytes, Stack size 24 bytes, patch.o(i.check_PerStatsProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = check_PerStatsProcess
</UL>
<BR>[Calls]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_PLUS_PerStatsReset (via Veneer)
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_PLUS_PerStasReadByChn (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simpleBLECentralEventCB
</UL>

<P><STRONG><a name="[cf]"></a>check_chip_id</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, flash_ext.o(i.check_chip_id))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = check_chip_id &rArr; read_chip_id &rArr; chip_id_one_bit_hot_convter
</UL>
<BR>[Calls]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_chip_id
</UL>
<BR>[Called By]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_config
</UL>

<P><STRONG><a name="[d1]"></a>check_chip_mAddr</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, flash_ext.o(i.check_chip_mAddr))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = check_chip_mAddr &rArr; read_chip_mAddr &rArr; chip_id_one_bit_hot_convter
</UL>
<BR>[Calls]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_chip_mAddr
</UL>
<BR>[Called By]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_config
</UL>

<P><STRONG><a name="[a5]"></a>check_internal_bus_busy</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, flash_ext.o(i.check_internal_bus_busy))
<BR><BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_sector_erase
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProgramWord
</UL>

<P><STRONG><a name="[177]"></a>clk_gate_enable</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, clock.o(i.clk_gate_enable))
<BR><BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_hw_config
</UL>

<P><STRONG><a name="[176]"></a>clk_pclk</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, clock.o(i.clk_pclk))
<BR><BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_hw_config
</UL>

<P><STRONG><a name="[178]"></a>clk_reset</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, clock.o(i.clk_reset))
<BR><BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_hw_config
</UL>

<P><STRONG><a name="[a7]"></a>disable_spif_flash_write</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, flash_ext.o(i.disable_spif_flash_write))
<BR><BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_sector_erase
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProgramWord
</UL>

<P><STRONG><a name="[a6]"></a>enable_spif_flash_write</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, flash_ext.o(i.enable_spif_flash_write))
<BR><BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_sector_erase
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProgramWord
</UL>

<P><STRONG><a name="[d3]"></a>flash_sector_erase</STRONG> (Thumb, 74 bytes, Stack size 4 bytes, flash_ext.o(i.flash_sector_erase))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = flash_sector_erase
</UL>
<BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enable_spif_flash_write
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disable_spif_flash_write
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_internal_bus_busy
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_snv_write
</UL>

<P><STRONG><a name="[b]"></a>fputc</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, fputc.o(i.fputc))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = fputc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printf8.o(i.__0printf$8)
</UL>
<P><STRONG><a name="[107]"></a>gpio_pin0to3_pin31to34_control</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, gpio.o(i.gpio_pin0to3_pin31to34_control))
<BR><BR>[Called By]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_pin_init
</UL>

<P><STRONG><a name="[2f]"></a>hal_GPIO_IRQHandler</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, gpio.o(i.hal_GPIO_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = hal_GPIO_IRQHandler &rArr; gpioin_event &rArr; gpio_interrupt_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpioin_event
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jump_table.o(jump_table_mem_area)
</UL>
<P><STRONG><a name="[2d]"></a>hal_SPI0_IRQHandler</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, spi.o(i.hal_SPI0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = hal_SPI0_IRQHandler &rArr; spi_int_handle &rArr; hal_pwrmgr_unlock
</UL>
<BR>[Calls]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spis_int_handle
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_int_handle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jump_table.o(jump_table_mem_area)
</UL>
<P><STRONG><a name="[2e]"></a>hal_SPI1_IRQHandler</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, spi.o(i.hal_SPI1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = hal_SPI1_IRQHandler &rArr; spi_int_handle &rArr; hal_pwrmgr_unlock
</UL>
<BR>[Calls]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spis_int_handle
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_int_handle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jump_table.o(jump_table_mem_area)
</UL>
<P><STRONG><a name="[2c]"></a>hal_UART0_IRQHandler</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, uart.o(i.hal_UART0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = hal_UART0_IRQHandler &rArr; irq_rx_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;irq_tx_empty_handler
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;irq_rx_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jump_table.o(jump_table_mem_area)
</UL>
<P><STRONG><a name="[102]"></a>hal_gpio_fmux</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, gpio.o(i.hal_gpio_fmux))
<BR><BR>[Called By]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_int_handle
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_hw_config
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_pin_init
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_fmux_set
</UL>

<P><STRONG><a name="[101]"></a>hal_gpio_fmux_set</STRONG> (Thumb, 42 bytes, Stack size 12 bytes, gpio.o(i.hal_gpio_fmux_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = hal_gpio_fmux_set
</UL>
<BR>[Calls]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_fmux
</UL>
<BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_hw_config
</UL>

<P><STRONG><a name="[103]"></a>hal_gpio_init</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, gpio.o(i.hal_gpio_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = hal_gpio_init &rArr; hal_pwrmgr_register
</UL>
<BR>[Calls]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwrmgr_register
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[106]"></a>hal_gpio_pin_init</STRONG> (Thumb, 82 bytes, Stack size 12 bytes, gpio.o(i.hal_gpio_pin_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = hal_gpio_pin_init
</UL>
<BR>[Calls]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_fmux
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_pin0to3_pin31to34_control
</UL>
<BR>[Called By]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpioin_enable
</UL>

<P><STRONG><a name="[108]"></a>hal_gpio_pull_set</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, gpio.o(i.hal_gpio_pull_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = hal_gpio_pull_set
</UL>
<BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_rtc_clock_config
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simple_demo_init
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_rfphy_init
</UL>

<P><STRONG><a name="[f6]"></a>hal_gpio_read</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, gpio.o(i.hal_gpio_read))
<BR><BR>[Called By]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simple_rfphy_dtm_ext_demo
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simple_demo_init
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpioin_enable
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_wakeup_handler
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_sleep_handler
</UL>

<P><STRONG><a name="[f7]"></a>hal_gpio_wakeup_set</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, gpio.o(i.hal_gpio_wakeup_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = hal_gpio_wakeup_set
</UL>
<BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwrmgr_poweroff
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_sleep_handler
</UL>

<P><STRONG><a name="[f9]"></a>hal_gpioin_enable</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, gpio.o(i.hal_gpioin_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = hal_gpioin_enable &rArr; hal_gpio_pin_init
</UL>
<BR>[Calls]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_read
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_pin_init
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_interrupt_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_wakeup_handler
</UL>

<P><STRONG><a name="[109]"></a>hal_ms_intv</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, clock.o(i.hal_ms_intv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = hal_ms_intv
</UL>
<BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_dtm_ext_rx_demod_burst
</UL>

<P><STRONG><a name="[129]"></a>hal_pwrmgr_RAM_retention</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, pwrmgr.o(i.hal_pwrmgr_RAM_retention))
<BR><BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[10a]"></a>hal_pwrmgr_RAM_retention_set</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, pwrmgr.o(i.hal_pwrmgr_RAM_retention_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = hal_pwrmgr_RAM_retention_set &rArr; subWriteReg
</UL>
<BR>[Calls]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;subWriteReg
</UL>
<BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwrmgr_sleep_process
</UL>

<P><STRONG><a name="[10c]"></a>hal_pwrmgr_init</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, pwrmgr.o(i.hal_pwrmgr_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = hal_pwrmgr_init
</UL>
<BR>[Calls]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enableSleep (via Veneer)
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disableSleep (via Veneer)
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[10f]"></a>hal_pwrmgr_lock</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, pwrmgr.o(i.hal_pwrmgr_lock))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = hal_pwrmgr_lock
</UL>
<BR>[Calls]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disableSleep (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;txmit_buf_use_tx_buf
</UL>

<P><STRONG><a name="[110]"></a>hal_pwrmgr_poweroff</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, pwrmgr.o(i.hal_pwrmgr_poweroff))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = hal_pwrmgr_poweroff &rArr; hal_gpio_wakeup_set
</UL>
<BR>[Calls]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;subWriteReg
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_wakeup_set
</UL>
<BR>[Called By]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simple_rfphy_dtm_ext_demo
</UL>

<P><STRONG><a name="[105]"></a>hal_pwrmgr_register</STRONG> (Thumb, 56 bytes, Stack size 12 bytes, pwrmgr.o(i.hal_pwrmgr_register))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = hal_pwrmgr_register
</UL>
<BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_init
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_rfphy_init
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_init
</UL>

<P><STRONG><a name="[27]"></a>hal_pwrmgr_sleep_process</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, pwrmgr.o(i.hal_pwrmgr_sleep_process))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = hal_pwrmgr_sleep_process &rArr; hal_pwrmgr_RAM_retention_set &rArr; subWriteReg
</UL>
<BR>[Calls]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwrmgr_RAM_retention_set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jump_table.o(jump_table_mem_area)
</UL>
<P><STRONG><a name="[111]"></a>hal_pwrmgr_unlock</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, pwrmgr.o(i.hal_pwrmgr_unlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = hal_pwrmgr_unlock
</UL>
<BR>[Calls]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enableSleep (via Veneer)
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disableSleep (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_int_handle
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;irq_tx_empty_handler
</UL>

<P><STRONG><a name="[28]"></a>hal_pwrmgr_wakeup_process</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, pwrmgr.o(i.hal_pwrmgr_wakeup_process))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = hal_pwrmgr_wakeup_process
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jump_table.o(jump_table_mem_area)
</UL>
<P><STRONG><a name="[c1]"></a>hal_read_current_time</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, common.o(i.hal_read_current_time))
<BR><BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitUs
</UL>

<P><STRONG><a name="[113]"></a>hal_rom_code_ini</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, patch.o(i.hal_rom_code_ini))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = hal_rom_code_ini &rArr; rf_calibrate1 &rArr; rc32k_calibration_check &rArr; rc32k_tracking_check &rArr; WaitRTCCount
</UL>
<BR>[Calls]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_ini
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_calibrate1
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wakeup_init (via Veneer)
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;boot_init (via Veneer)
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_rfphy_init
</UL>

<P><STRONG><a name="[117]"></a>hal_rtc_clock_config</STRONG> (Thumb, 126 bytes, Stack size 24 bytes, clock.o(i.hal_rtc_clock_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = hal_rtc_clock_config &rArr; subWriteReg
</UL>
<BR>[Calls]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;subWriteReg
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_pull_set
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[118]"></a>hal_system_init</STRONG> (Thumb, 176 bytes, Stack size 24 bytes, common.o(i.hal_system_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = hal_system_init &rArr; subWriteReg
</UL>
<BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod (via Veneer)
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;subWriteReg
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[154]"></a>hal_systick</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, clock.o(i.hal_systick))
<BR><BR>[Called By]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_dtm_ext_rx_demod_burst
</UL>

<P><STRONG><a name="[119]"></a>hal_uart_init</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, uart.o(i.hal_uart_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = hal_uart_init &rArr; uart_hw_config &rArr; hal_gpio_fmux_set
</UL>
<BR>[Calls]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwrmgr_register
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_hw_config
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;phy_printf_init
</UL>

<P><STRONG><a name="[11a]"></a>hal_uart_send_buff</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, uart.o(i.hal_uart_send_buff))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = hal_uart_send_buff &rArr; txmit_buf_use_tx_buf &rArr; hal_pwrmgr_lock
</UL>
<BR>[Calls]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;txmit_buf_use_tx_buf
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;txmit_buf_polling
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;phy_printf
</UL>

<P><STRONG><a name="[11d]"></a>init_config</STRONG> (Thumb, 442 bytes, Stack size 24 bytes, patch.o(i.init_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = init_config &rArr; check_chip_mAddr &rArr; read_chip_mAddr &rArr; chip_id_one_bit_hot_convter
</UL>
<BR>[Calls]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_chip_mAddr
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_chip_id
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[14]"></a>llSetupAdv1</STRONG> (Thumb, 114 bytes, Stack size 8 bytes, patch.o(i.llSetupAdv1))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = llSetupAdv1 &rArr; rf_phy_change_cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_set_event (via Veneer)
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_change_cfg
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_hw_rst_tfifo (via Veneer)
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_hw_rst_rfifo (via Veneer)
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_hw_ign_rfifo (via Veneer)
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llSetupUndirectedAdvEvt (via Veneer)
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llSetupScannableAdvEvt (via Veneer)
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llSetupNonConnectableAdvEvt (via Veneer)
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llSetupDirectedAdvEvt (via Veneer)
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> patch.o(i.init_config)
</UL>
<P><STRONG><a name="[11]"></a>ll_hw_go1</STRONG> (Thumb, 220 bytes, Stack size 16 bytes, patch.o(i.ll_hw_go1))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = ll_hw_go1 &rArr; subWriteReg
</UL>
<BR>[Calls]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;subWriteReg
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_max_length (via Veneer)
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_hw_get_tr_mode (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> patch.o(i.init_config)
</UL>
<P><STRONG><a name="[6]"></a>main</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = main &rArr; simple_demo_init &rArr; simple_rfphy_dtm_ext_demo &rArr; rf_phy_dtm_ext_rx_demod_burst &rArr; rf_phy_dtm_trigged &rArr; rf_phy_dtm_zigbee_pkt_gen
</UL>
<BR>[Calls]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_mem_set_heap (via Veneer)
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_config
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_system_init
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_rtc_clock_config
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwrmgr_init
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwrmgr_RAM_retention
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_init
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_main
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simple_demo_init
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_rfphy_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[26]"></a>osalInitTasks</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, osal_simpleblecentral.o(i.osalInitTasks))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = osalInitTasks &rArr; SimpleBLECentral_Init &rArr; GAPBondMgr_SetParameter &rArr; gapBondMgrEraseAllBondings &rArr; gapBondMgrEraseBonding &rArr; osal_snv_write &rArr; snvwr &rArr; ProgramWord
</UL>
<BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memset (via Veneer)
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPBondMgr_Init
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SimpleBLECentral_Init
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SM_Init (via Veneer)
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_Init (via Veneer)
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L2CAP_Init (via Veneer)
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCI_Init (via Veneer)
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATT_Init (via Veneer)
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_Init (via Veneer)
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPCentralRole_Init
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_mem_alloc (via Veneer)
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jump_table.o(jump_table_mem_area)
</UL>
<P><STRONG><a name="[5e]"></a>osal_snv_compact</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, osal_snv.o(i.osal_snv_compact))
<BR><BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPBondMgr_SetParameter
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPBondMgr_ProcessGAPMsg
</UL>

<P><STRONG><a name="[42]"></a>osal_snv_read</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, osal_snv.o(i.osal_snv_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = osal_snv_read
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy (via Veneer)
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snv_calc_addr
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPBondMgr_ResolveAddr
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPBondMgr_LinkEst
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapBondMgrUpdateCharCfg
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapBondMgrReadBonds
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapBondMgrGetStateFlags
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapBondMgrGetPublicAddr
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapBondMgrEraseBonding
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapBondMgrChangeState
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapBondMgrBondReq
</UL>

<P><STRONG><a name="[59]"></a>osal_snv_write</STRONG> (Thumb, 138 bytes, Stack size 88 bytes, osal_snv.o(i.osal_snv_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = osal_snv_write &rArr; snvwr &rArr; ProgramWord
</UL>
<BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memset (via Veneer)
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy (via Veneer)
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_sector_erase
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snvwr
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snv_calc_addr
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPBondMgr_ProcessGAPMsg
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapBondMgrUpdateCharCfg
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapBondMgrEraseBonding
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapBondMgrChangeState
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapBondMgrAddBond
</UL>

<P><STRONG><a name="[ab]"></a>phy_printf</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, my_printf.o(i.phy_printf))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = phy_printf &rArr; print &rArr; printi &rArr; prints
</UL>
<BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen (via Veneer)
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_send_buff
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simple_demo_init
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simpleBLECentral_LinkDevice
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simpleBLECentralProcessGATTMsg
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simpleBLECentralEventCB
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simpleBLEAnalysisADVDATA
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;centralTestVectorProcess
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SimpleBLECentral_ProcessEvent
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SimpleBLECentral_Init
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessWriteReq
</UL>

<P><STRONG><a name="[136]"></a>phy_printf_init</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, my_printf.o(i.phy_printf_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = phy_printf_init &rArr; hal_uart_init &rArr; uart_hw_config &rArr; hal_gpio_fmux_set
</UL>
<BR>[Calls]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_init
</UL>
<BR>[Called By]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simple_rfphy_dtm_ext_demo
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simple_demo_init
</UL>

<P><STRONG><a name="[13a]"></a>rc32k_calibration</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, patch.o(i.rc32k_calibration))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = rc32k_calibration &rArr; WaitRTCCount
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitRTCCount
</UL>
<BR>[Called By]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rc32k_calibration_check
</UL>

<P><STRONG><a name="[13b]"></a>rc32k_calibration_check</STRONG> (Thumb, 60 bytes, Stack size 40 bytes, patch.o(i.rc32k_calibration_check))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = rc32k_calibration_check &rArr; rc32k_tracking_check &rArr; WaitRTCCount
</UL>
<BR>[Calls]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rc32k_tracking_check
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rc32k_calibration
</UL>
<BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_calibrate1
</UL>

<P><STRONG><a name="[13c]"></a>rc32k_tracking_check</STRONG> (Thumb, 104 bytes, Stack size 88 bytes, patch.o(i.rc32k_tracking_check))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = rc32k_tracking_check &rArr; WaitRTCCount
</UL>
<BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod (via Veneer)
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitRTCCount
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arry_sort
</UL>
<BR>[Called By]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rc32k_calibration_check
</UL>

<P><STRONG><a name="[d0]"></a>read_chip_id</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, flash_ext.o(i.read_chip_id))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = read_chip_id &rArr; chip_id_one_bit_hot_convter
</UL>
<BR>[Calls]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chip_id_one_bit_hot_convter
</UL>
<BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_chip_id
</UL>

<P><STRONG><a name="[d2]"></a>read_chip_mAddr</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, flash_ext.o(i.read_chip_mAddr))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = read_chip_mAddr &rArr; chip_id_one_bit_hot_convter
</UL>
<BR>[Calls]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chip_id_one_bit_hot_convter
</UL>
<BR>[Called By]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_chip_mAddr
</UL>

<P><STRONG><a name="[13f]"></a>read_current_time</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, rf_phy_driver.o(i.read_current_time))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = read_current_time
</UL>
<BR>[Calls]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_timer3_count (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_dtm_ext_tx_mod_burst
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_direct_test
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;waitTimeUs
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_dtm_trigged
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_dtm_cmd_parse
</UL>

<P><STRONG><a name="[12]"></a>rf_calibrate1</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, patch.o(i.rf_calibrate1))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = rf_calibrate1 &rArr; rc32k_calibration_check &rArr; rc32k_tracking_check &rArr; WaitRTCCount
</UL>
<BR>[Calls]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_tpCal_gen_cap_arrary
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_rxDcoc_cfg
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_ana_cfg
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rc32k_calibration_check
</UL>
<BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_rom_code_ini
</UL>
<BR>[Address Reference Count : 1]<UL><LI> patch.o(i.init_config)
</UL>
<P><STRONG><a name="[141]"></a>rf_phy_ana_cfg</STRONG> (Thumb, 190 bytes, Stack size 24 bytes, rf_phy_driver.o(i.rf_phy_ana_cfg))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = rf_phy_ana_cfg &rArr; subWriteReg
</UL>
<BR>[Calls]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;subWriteReg
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_ini
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_dtm_trigged
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_calibrate1
</UL>

<P><STRONG><a name="[144]"></a>rf_phy_bb_cfg</STRONG> (Thumb, 194 bytes, Stack size 16 bytes, rf_phy_driver.o(i.rf_phy_bb_cfg))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = rf_phy_bb_cfg &rArr; subWriteReg
</UL>
<BR>[Calls]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;subWriteReg
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_ini
</UL>

<P><STRONG><a name="[11e]"></a>rf_phy_change_cfg</STRONG> (Thumb, 70 bytes, Stack size 12 bytes, rf_phy_driver.o(i.rf_phy_change_cfg))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = rf_phy_change_cfg
</UL>
<BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llSetupAdv1
</UL>

<P><STRONG><a name="[145]"></a>rf_phy_direct_test</STRONG> (Thumb, 602 bytes, Stack size 24 bytes, rf_phy_driver.o(i.rf_phy_direct_test))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = rf_phy_direct_test &rArr; rf_phy_dtm_trigged &rArr; rf_phy_dtm_zigbee_pkt_gen
</UL>
<BR>[Calls]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;subWriteReg
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;waitTimeUs
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_dtm_trigged
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_dtm_evt_send
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_dtm_cmd_parse
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_current_time
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_dtm_init
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_get_pktFoot
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_hw_trigger (via Veneer)
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_hw_set_trx_settle (via Veneer)
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_hw_get_irq_status (via Veneer)
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_hw_clr_irq (via Veneer)
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rom_hal_uart_tx (via Veneer)
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rom_hal_uart_init (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simple_demo_init
</UL>

<P><STRONG><a name="[149]"></a>rf_phy_dtm_cmd_parse</STRONG> (Thumb, 754 bytes, Stack size 24 bytes, rf_phy_driver.o(i.rf_phy_dtm_cmd_parse))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = rf_phy_dtm_cmd_parse &rArr; subWriteReg
</UL>
<BR>[Calls]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;subWriteReg
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_current_time
</UL>
<BR>[Called By]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_direct_test
</UL>

<P><STRONG><a name="[14a]"></a>rf_phy_dtm_evt_send</STRONG> (Thumb, 198 bytes, Stack size 16 bytes, rf_phy_driver.o(i.rf_phy_dtm_evt_send))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = rf_phy_dtm_evt_send
</UL>
<BR>[Calls]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rom_hal_uart_send_byte (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_direct_test
</UL>

<P><STRONG><a name="[175]"></a>rf_phy_dtm_ext_acc_code_set</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, rf_phy_driver.o(i.rf_phy_dtm_ext_acc_code_set))
<BR><BR>[Called By]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simple_rfphy_dtm_ext_demo
</UL>

<P><STRONG><a name="[153]"></a>rf_phy_dtm_ext_rx_demod_burst</STRONG> (Thumb, 310 bytes, Stack size 56 bytes, rf_phy_driver.o(i.rf_phy_dtm_ext_rx_demod_burst))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = rf_phy_dtm_ext_rx_demod_burst &rArr; rf_phy_dtm_trigged &rArr; rf_phy_dtm_zigbee_pkt_gen
</UL>
<BR>[Calls]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;subWriteReg
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_systick
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_ms_intv
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_dtm_trigged
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_dtm_stop
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_dtm_init
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_get_pktFoot
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_hw_trigger (via Veneer)
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_hw_get_irq_status (via Veneer)
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_hw_clr_irq (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simple_rfphy_dtm_ext_demo
</UL>

<P><STRONG><a name="[156]"></a>rf_phy_dtm_ext_tx_mod_burst</STRONG> (Thumb, 154 bytes, Stack size 40 bytes, rf_phy_driver.o(i.rf_phy_dtm_ext_tx_mod_burst))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = rf_phy_dtm_ext_tx_mod_burst &rArr; rf_phy_dtm_trigged &rArr; rf_phy_dtm_zigbee_pkt_gen
</UL>
<BR>[Calls]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;subWriteReg
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_dtm_trigged
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_current_time
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_dtm_stop
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_dtm_init
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_hw_trigger (via Veneer)
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_hw_set_trx_settle (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simple_rfphy_dtm_ext_demo
</UL>

<P><STRONG><a name="[157]"></a>rf_phy_dtm_ext_tx_modulation</STRONG> (Thumb, 64 bytes, Stack size 40 bytes, rf_phy_driver.o(i.rf_phy_dtm_ext_tx_modulation))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = rf_phy_dtm_ext_tx_modulation &rArr; rf_phy_dtm_trigged &rArr; rf_phy_dtm_zigbee_pkt_gen
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;waitTimeUs
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_dtm_trigged
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_dtm_stop
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_dtm_init
</UL>
<BR>[Called By]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simple_rfphy_dtm_ext_demo
</UL>

<P><STRONG><a name="[158]"></a>rf_phy_dtm_ext_tx_singleTone</STRONG> (Thumb, 60 bytes, Stack size 40 bytes, rf_phy_driver.o(i.rf_phy_dtm_ext_tx_singleTone))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = rf_phy_dtm_ext_tx_singleTone &rArr; rf_phy_dtm_trigged &rArr; rf_phy_dtm_zigbee_pkt_gen
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;waitTimeUs
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_dtm_trigged
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_dtm_stop
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_dtm_init
</UL>
<BR>[Called By]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simple_rfphy_dtm_ext_demo
</UL>

<P><STRONG><a name="[14b]"></a>rf_phy_dtm_trigged</STRONG> (Thumb, 690 bytes, Stack size 24 bytes, rf_phy_driver.o(i.rf_phy_dtm_trigged))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = rf_phy_dtm_trigged &rArr; rf_phy_dtm_zigbee_pkt_gen
</UL>
<BR>[Calls]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod (via Veneer)
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;subWriteReg
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_ini
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_tpCal_cfg_avg
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_set_txPower
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_dtm_zigbee_pkt_gen
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_current_time
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_rxDcoc_cfg
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_ana_cfg
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_hw_trigger (via Veneer)
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_hw_set_timing (via Veneer)
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_hw_set_stx (via Veneer)
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_hw_set_srx (via Veneer)
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_hw_set_irq (via Veneer)
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_hw_rst_tfifo (via Veneer)
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_hw_clr_irq (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_dtm_ext_tx_singleTone
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_dtm_ext_tx_modulation
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_dtm_ext_tx_mod_burst
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_dtm_ext_rx_demod_burst
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_direct_test
</UL>

<P><STRONG><a name="[15d]"></a>rf_phy_dtm_zigbee_pkt_gen</STRONG> (Thumb, 110 bytes, Stack size 160 bytes, rf_phy_driver.o(i.rf_phy_dtm_zigbee_pkt_gen))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = rf_phy_dtm_zigbee_pkt_gen
</UL>
<BR>[Calls]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zigbee_crc16_gen (via Veneer)
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_hw_write_tfifo (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_dtm_trigged
</UL>

<P><STRONG><a name="[150]"></a>rf_phy_get_pktFoot</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, rf_phy_driver.o(i.rf_phy_get_pktFoot))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = rf_phy_get_pktFoot
</UL>
<BR>[Called By]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_dtm_ext_rx_demod_burst
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_direct_test
</UL>

<P><STRONG><a name="[29]"></a>rf_phy_ini</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, rf_phy_driver.o(i.rf_phy_ini))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = rf_phy_ini &rArr; rf_phy_ana_cfg &rArr; subWriteReg
</UL>
<BR>[Calls]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_set_txPower
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_bb_cfg
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_ana_cfg
</UL>
<BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_rom_code_ini
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_dtm_trigged
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jump_table.o(jump_table_mem_area)
</UL>
<P><STRONG><a name="[15c]"></a>rf_phy_set_txPower</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, rf_phy_driver.o(i.rf_phy_set_txPower))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = rf_phy_set_txPower &rArr; subWriteReg
</UL>
<BR>[Calls]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;subWriteReg
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_ini
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_dtm_trigged
</UL>

<P><STRONG><a name="[143]"></a>rf_rxDcoc_cfg</STRONG> (Thumb, 220 bytes, Stack size 20 bytes, rf_phy_driver.o(i.rf_rxDcoc_cfg))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = rf_rxDcoc_cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_dtm_trigged
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_calibrate1
</UL>

<P><STRONG><a name="[15b]"></a>rf_tpCal_cfg_avg</STRONG> (Thumb, 174 bytes, Stack size 28 bytes, rf_phy_driver.o(i.rf_tpCal_cfg_avg))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = rf_tpCal_cfg_avg &rArr; rf_tp_cal
</UL>
<BR>[Calls]<UL><LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_tp_cal
</UL>
<BR>[Called By]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_dtm_trigged
</UL>

<P><STRONG><a name="[142]"></a>rf_tpCal_gen_cap_arrary</STRONG> (Thumb, 60 bytes, Stack size 4 bytes, rf_phy_driver.o(i.rf_tpCal_gen_cap_arrary))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = rf_tpCal_gen_cap_arrary &rArr; rf_tp_cal
</UL>
<BR>[Calls]<UL><LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_tp_cal
</UL>
<BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_calibrate1
</UL>

<P><STRONG><a name="[163]"></a>rf_tp_cal</STRONG> (Thumb, 114 bytes, Stack size 12 bytes, rf_phy_driver.o(i.rf_tp_cal))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = rf_tp_cal
</UL>
<BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_tpCal_cfg_avg
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_tpCal_gen_cap_arrary
</UL>

<P><STRONG><a name="[10b]"></a>subWriteReg</STRONG> (Thumb, 36 bytes, Stack size 20 bytes, common.o(i.subWriteReg))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = subWriteReg
</UL>
<BR>[Called By]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_dtm_ext_tx_mod_burst
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_dtm_ext_rx_demod_burst
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_direct_test
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_system_init
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_rtc_clock_config
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwrmgr_poweroff
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_rfphy_init
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwrmgr_RAM_retention_set
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_set_txPower
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_dtm_trigged
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_dtm_cmd_parse
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_bb_cfg
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_dtm_stop
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_ana_cfg
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_hw_go1
</UL>

<P><STRONG><a name="[151]"></a>waitTimeUs</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, rf_phy_driver.o(i.waitTimeUs))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = waitTimeUs &rArr; read_current_time
</UL>
<BR>[Calls]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_current_time
</UL>
<BR>[Called By]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_dtm_ext_tx_singleTone
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_dtm_ext_tx_modulation
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_direct_test
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[114]"></a>NVIC_SetPriority</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, main.o(i.NVIC_SetPriority))
<BR><BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_wakeup_handler
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_rfphy_init
</UL>

<P><STRONG><a name="[112]"></a>hal_rfphy_init</STRONG> (Thumb, 92 bytes, Stack size 8 bytes, main.o(i.hal_rfphy_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = hal_rfphy_init &rArr; hal_rom_code_ini &rArr; rf_calibrate1 &rArr; rc32k_calibration_check &rArr; rc32k_tracking_check &rArr; WaitRTCCount
</UL>
<BR>[Calls]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;subWriteReg
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_rom_code_ini
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwrmgr_register
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_pull_set
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[f]"></a>rf_wakeup_handler</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, main.o(i.rf_wakeup_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = rf_wakeup_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.hal_rfphy_init)
</UL>
<P><STRONG><a name="[12a]"></a>simple_demo_init</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, main.o(i.simple_demo_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = simple_demo_init &rArr; simple_rfphy_dtm_ext_demo &rArr; rf_phy_dtm_ext_rx_demod_burst &rArr; rf_phy_dtm_trigged &rArr; rf_phy_dtm_zigbee_pkt_gen
</UL>
<BR>[Calls]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_direct_test
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;phy_printf_init
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;phy_printf
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_read
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_pull_set
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LOG_PATCH_DATA_TIME
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LOG_CHIP_MADDR
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LOG_CHIP_ID
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simple_rfphy_dtm_ext_demo
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[171]"></a>simple_rfphy_dtm_ext_demo</STRONG> (Thumb, 194 bytes, Stack size 56 bytes, main.o(i.simple_rfphy_dtm_ext_demo))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = simple_rfphy_dtm_ext_demo &rArr; rf_phy_dtm_ext_rx_demod_burst &rArr; rf_phy_dtm_trigged &rArr; rf_phy_dtm_zigbee_pkt_gen
</UL>
<BR>[Calls]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_dtm_ext_tx_singleTone
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_dtm_ext_tx_modulation
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_dtm_ext_tx_mod_burst
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_dtm_ext_rx_demod_burst
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_dtm_ext_acc_code_set
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;phy_printf_init
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwrmgr_poweroff
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_read
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitUs
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitMs
</UL>
<BR>[Called By]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simple_demo_init
</UL>

<P><STRONG><a name="[52]"></a>gapBondFreeAuthEvt</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, gapbondmgr.o(i.gapBondFreeAuthEvt))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gapBondFreeAuthEvt
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_msg_deallocate (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPBondMgr_ProcessEvent
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapBondMgrEraseBonding
</UL>

<P><STRONG><a name="[4f]"></a>gapBondMgrAddBond</STRONG> (Thumb, 304 bytes, Stack size 48 bytes, gapbondmgr.o(i.gapBondMgrAddBond))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = gapBondMgrAddBond &rArr; osal_snv_write &rArr; snvwr &rArr; ProgramWord
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_snv_write
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memset (via Veneer)
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_isbufset (via Veneer)
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapBondSetupPrivFlag
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapBondMgr_SyncWhiteList
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapBondMgrFindAddr
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPBondMgr_ProcessGAPMsg
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPBondMgr_ProcessEvent
</UL>

<P><STRONG><a name="[48]"></a>gapBondMgrAuthenticate</STRONG> (Thumb, 210 bytes, Stack size 56 bytes, gapbondmgr.o(i.gapBondMgrAuthenticate))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = gapBondMgrAuthenticate
</UL>
<BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memset (via Veneer)
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_Authenticate (via Veneer)
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPBondMgr_ProcessGAPMsg
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPBondMgr_LinkEst
</UL>

<P><STRONG><a name="[40]"></a>gapBondMgrBondReq</STRONG> (Thumb, 78 bytes, Stack size 48 bytes, gapbondmgr.o(i.gapBondMgrBondReq))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = gapBondMgrBondReq &rArr; osal_snv_read
</UL>
<BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_snv_read
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memset (via Veneer)
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_Bond (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPBondMgr_ProcessGAPMsg
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPBondMgr_LinkEst
</UL>

<P><STRONG><a name="[d8]"></a>gapBondMgrBondTotal</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, gapbondmgr.o(i.gapBondMgrBondTotal))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gapBondMgrBondTotal
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_isbufset (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapBondSetupPrivFlag
</UL>

<P><STRONG><a name="[66]"></a>gapBondMgrChangeState</STRONG> (Thumb, 88 bytes, Stack size 32 bytes, gapbondmgr.o(i.gapBondMgrChangeState))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = gapBondMgrChangeState &rArr; osal_snv_write &rArr; snvwr &rArr; ProgramWord
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_snv_write
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_snv_read
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_isbufset (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPBondMgr_ServiceChangeInd
</UL>

<P><STRONG><a name="[5c]"></a>gapBondMgrEraseAllBondings</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, gapbondmgr.o(i.gapBondMgrEraseAllBondings))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = gapBondMgrEraseAllBondings &rArr; gapBondMgrEraseBonding &rArr; osal_snv_write &rArr; snvwr &rArr; ProgramWord
</UL>
<BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapBondMgrEraseBonding
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPBondMgr_SetParameter
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPBondMgr_ProcessGAPMsg
</UL>

<P><STRONG><a name="[5d]"></a>gapBondMgrEraseBonding</STRONG> (Thumb, 224 bytes, Stack size 80 bytes, gapbondmgr.o(i.gapBondMgrEraseBonding))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = gapBondMgrEraseBonding &rArr; osal_snv_write &rArr; snvwr &rArr; ProgramWord
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_snv_write
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_snv_read
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memset (via Veneer)
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_isbufset (via Veneer)
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_clear_event (via Veneer)
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapBondFreeAuthEvt
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPBondMgr_SetParameter
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPBondMgr_ProcessGAPMsg
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapBondMgrEraseAllBondings
</UL>

<P><STRONG><a name="[62]"></a>gapBondMgrFindAddr</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, gapbondmgr.o(i.gapBondMgrFindAddr))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gapBondMgrFindAddr
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcmp (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPBondMgr_ResolveAddr
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapBondMgrAddBond
</UL>

<P><STRONG><a name="[da]"></a>gapBondMgrFindCharCfgItem</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, gapbondmgr.o(i.gapBondMgrFindCharCfgItem))
<BR><BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapBondMgrUpdateCharCfg
</UL>

<P><STRONG><a name="[65]"></a>gapBondMgrGetPublicAddr</STRONG> (Thumb, 54 bytes, Stack size 32 bytes, gapbondmgr.o(i.gapBondMgrGetPublicAddr))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = gapBondMgrGetPublicAddr &rArr; osal_snv_read
</UL>
<BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_snv_read
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPBondMgr_ResolveAddr
</UL>

<P><STRONG><a name="[3f]"></a>gapBondMgrGetStateFlags</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, gapbondmgr.o(i.gapBondMgrGetStateFlags))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = gapBondMgrGetStateFlags &rArr; osal_snv_read
</UL>
<BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_snv_read
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPBondMgr_ProcessGAPMsg
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPBondMgr_LinkEst
</UL>

<P><STRONG><a name="[45]"></a>gapBondMgrInvertCharCfgItem</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, gapbondmgr.o(i.gapBondMgrInvertCharCfgItem))
<BR><BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPBondMgr_LinkEst
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapBondMgrUpdateCharCfg
</UL>

<P><STRONG><a name="[3c]"></a>gapBondMgrReadBonds</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, gapbondmgr.o(i.gapBondMgrReadBonds))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = gapBondMgrReadBonds &rArr; gapBondSetupPrivFlag &rArr; GGS_SetParameter &rArr; ggs_SetAttrWPermit
</UL>
<BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_snv_read
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memset (via Veneer)
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapBondSetupPrivFlag
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapBondMgr_SyncWhiteList
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPBondMgr_SetParameter
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPBondMgr_ProcessGAPMsg
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPBondMgr_Init
</UL>

<P><STRONG><a name="[9]"></a>gapBondMgrSendServiceChange</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, gapbondmgr.o(i.gapBondMgrSendServiceChange))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = gapBondMgrSendServiceChange &rArr; GATTServApp_SendServiceChangedInd &rArr; GATTServApp_ReadCharCfg
</UL>
<BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_SendServiceChangedInd
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPBondMgr_ServiceChangeInd
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gapbondmgr.o(i.GAPBondMgr_ServiceChangeInd)
</UL>
<P><STRONG><a name="[69]"></a>gapBondMgrUpdateCharCfg</STRONG> (Thumb, 170 bytes, Stack size 48 bytes, gapbondmgr.o(i.gapBondMgrUpdateCharCfg))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = gapBondMgrUpdateCharCfg &rArr; osal_snv_write &rArr; snvwr &rArr; ProgramWord
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_snv_write
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_snv_read
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memset (via Veneer)
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_isbufset (via Veneer)
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapBondMgrInvertCharCfgItem
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapBondMgrFindCharCfgItem
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPBondMgr_UpdateCharCfg
</UL>

<P><STRONG><a name="[51]"></a>gapBondMgr_SyncCharCfg</STRONG> (Thumb, 122 bytes, Stack size 40 bytes, gapbondmgr.o(i.gapBondMgr_SyncCharCfg))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = gapBondMgr_SyncCharCfg &rArr; GAPBondMgr_UpdateCharCfg &rArr; gapBondMgrUpdateCharCfg &rArr; osal_snv_write &rArr; snvwr &rArr; ProgramWord
</UL>
<BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATT_FindNextAttr (via Veneer)
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATT_FindHandleUUID (via Veneer)
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_ReadAttr
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPBondMgr_UpdateCharCfg
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPBondMgr_ProcessEvent
</UL>

<P><STRONG><a name="[d4]"></a>gapBondMgr_SyncWhiteList</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, gapbondmgr.o(i.gapBondMgr_SyncWhiteList))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gapBondMgr_SyncWhiteList
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_isbufset (via Veneer)
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCI_LE_ClearWhiteListCmd (via Veneer)
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCI_LE_AddWhiteListCmd (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapBondMgrReadBonds
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapBondMgrAddBond
</UL>

<P><STRONG><a name="[d5]"></a>gapBondSetupPrivFlag</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, gapbondmgr.o(i.gapBondSetupPrivFlag))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = gapBondSetupPrivFlag &rArr; GGS_SetParameter &rArr; ggs_SetAttrWPermit
</UL>
<BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GGS_SetParameter
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapBondMgrBondTotal
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapBondMgrReadBonds
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapBondMgrAddBond
</UL>

<P><STRONG><a name="[15]"></a>ggs_ReadAttrCB</STRONG> (Thumb, 194 bytes, Stack size 24 bytes, gapgattserver.o(i.ggs_ReadAttrCB))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ggs_ReadAttrCB
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_strlen (via Veneer)
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy (via Veneer)
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gapgattserver.o(.constdata)
</UL>
<P><STRONG><a name="[9e]"></a>ggs_SetAttrWPermit</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, gapgattserver.o(i.ggs_SetAttrWPermit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ggs_SetAttrWPermit
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GGS_SetParameter
</UL>

<P><STRONG><a name="[16]"></a>ggs_WriteAttrCB</STRONG> (Thumb, 222 bytes, Stack size 40 bytes, gapgattserver.o(i.ggs_WriteAttrCB))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ggs_WriteAttrCB
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_strlen (via Veneer)
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gapgattserver.o(.constdata)
</UL>
<P><STRONG><a name="[8f]"></a>gattServApp_FindAuthorizeAttrCB</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, gattservapp.o(i.gattServApp_FindAuthorizeAttrCB))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gattServApp_FindAuthorizeAttrCB
</UL>
<BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_FindServiceCBs
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_ReadAttr
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessWriteReq
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessPrepareWriteReq
</UL>

<P><STRONG><a name="[88]"></a>gattServApp_FindCharCfgItem</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, gattservapp.o(i.gattServApp_FindCharCfgItem))
<BR><BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_WriteCharCfg
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_ReadCharCfg
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_InitCharCfg
</UL>

<P><STRONG><a name="[e1]"></a>gattServApp_FindPrepareWriteQ</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, gattservapp.o(i.gattServApp_FindPrepareWriteQ))
<BR><BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessPrepareWriteReq
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessExecuteWriteReq
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_HandleConnStatusCB
</UL>

<P><STRONG><a name="[90]"></a>gattServApp_FindServiceCBs</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, gattservapp.o(i.gattServApp_FindServiceCBs))
<BR><BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_ReadAttr
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_WriteAttr
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_FindAuthorizeAttrCB
</UL>

<P><STRONG><a name="[a]"></a>gattServApp_HandleConnStatusCB</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, gattservapp.o(i.gattServApp_HandleConnStatusCB))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = gattServApp_HandleConnStatusCB &rArr; GATTServApp_InitCharCfg
</UL>
<BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memset (via Veneer)
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_FindPrepareWriteQ
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkDB_State (via Veneer)
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_InitCharCfg
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gattservapp.o(i.GATTServApp_Init)
</UL>
<P><STRONG><a name="[e2]"></a>gattServApp_ProcessExecuteWriteReq</STRONG> (Thumb, 132 bytes, Stack size 40 bytes, gattservapp.o(i.gattServApp_ProcessExecuteWriteReq))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = gattServApp_ProcessExecuteWriteReq &rArr; GATTServApp_WriteAttr
</UL>
<BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memset (via Veneer)
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATT_ExecuteWriteRsp (via Veneer)
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_WriteAttr
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_FindPrepareWriteQ
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessMsg
</UL>

<P><STRONG><a name="[e4]"></a>gattServApp_ProcessFindByTypeValueReq</STRONG> (Thumb, 224 bytes, Stack size 48 bytes, gattservapp.o(i.gattServApp_ProcessFindByTypeValueReq))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = gattServApp_ProcessFindByTypeValueReq &rArr; GATTServApp_ReadAttr &rArr; GATTServApp_ReadCharCfg
</UL>
<BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memset (via Veneer)
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcmp (via Veneer)
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATT_FindNextAttr (via Veneer)
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATT_FindHandleUUID (via Veneer)
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_ReadAttr
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATT_FindByTypeValueRsp (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessMsg
</UL>

<P><STRONG><a name="[8d]"></a>gattServApp_ProcessMsg</STRONG> (Thumb, 326 bytes, Stack size 40 bytes, gattservapp.o(i.gattServApp_ProcessMsg))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = gattServApp_ProcessMsg &rArr; gattServApp_ProcessWriteReq &rArr; phy_printf &rArr; print &rArr; printi &rArr; prints
</UL>
<BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_ReadAttr
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATT_FindHandle (via Veneer)
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATT_AppCompletedMsg (via Veneer)
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATT_ReadRsp (via Veneer)
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATT_ReadBlobRsp (via Veneer)
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATT_ExchangeMTURsp (via Veneer)
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATT_ErrorRsp (via Veneer)
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessWriteReq
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessReadMultiReq
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessReadByTypeReq
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessReadByGrpTypeReq
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessPrepareWriteReq
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessFindByTypeValueReq
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessExecuteWriteReq
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_ProcessEvent
</UL>

<P><STRONG><a name="[ed]"></a>gattServApp_ProcessPrepareWriteReq</STRONG> (Thumb, 150 bytes, Stack size 24 bytes, gattservapp.o(i.gattServApp_ProcessPrepareWriteReq))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = gattServApp_ProcessPrepareWriteReq &rArr; gattServApp_FindAuthorizeAttrCB
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy (via Veneer)
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATT_FindHandle (via Veneer)
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATT_PrepareWriteRsp (via Veneer)
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_FindPrepareWriteQ
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_FindAuthorizeAttrCB
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessMsg
</UL>

<P><STRONG><a name="[eb]"></a>gattServApp_ProcessReadByGrpTypeReq</STRONG> (Thumb, 332 bytes, Stack size 72 bytes, gattservapp.o(i.gattServApp_ProcessReadByGrpTypeReq))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = gattServApp_ProcessReadByGrpTypeReq &rArr; GATTServApp_ReadAttr &rArr; GATTServApp_ReadCharCfg
</UL>
<BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod (via Veneer)
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATT_FindNextAttr (via Veneer)
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATT_FindHandleUUID (via Veneer)
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_ReadAttr
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy (via Veneer)
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATT_VerifyReadPermissions (via Veneer)
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATT_ReadByGrpTypeRsp (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessMsg
</UL>

<P><STRONG><a name="[e7]"></a>gattServApp_ProcessReadByTypeReq</STRONG> (Thumb, 278 bytes, Stack size 56 bytes, gattservapp.o(i.gattServApp_ProcessReadByTypeReq))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = gattServApp_ProcessReadByTypeReq &rArr; GATTServApp_ReadAttr &rArr; GATTServApp_ReadCharCfg
</UL>
<BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod (via Veneer)
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATT_FindHandleUUID (via Veneer)
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_ReadAttr
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy (via Veneer)
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATT_VerifyReadPermissions (via Veneer)
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATT_ReadByTypeRsp (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessMsg
</UL>

<P><STRONG><a name="[ea]"></a>gattServApp_ProcessReadMultiReq</STRONG> (Thumb, 184 bytes, Stack size 48 bytes, gattservapp.o(i.gattServApp_ProcessReadMultiReq))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = gattServApp_ProcessReadMultiReq &rArr; GATTServApp_ReadAttr &rArr; GATTServApp_ReadCharCfg
</UL>
<BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_ReadAttr
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy (via Veneer)
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATT_FindHandle (via Veneer)
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATT_ReadMultiRsp (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessMsg
</UL>

<P><STRONG><a name="[ec]"></a>gattServApp_ProcessWriteReq</STRONG> (Thumb, 136 bytes, Stack size 40 bytes, gattservapp.o(i.gattServApp_ProcessWriteReq))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = gattServApp_ProcessWriteReq &rArr; phy_printf &rArr; print &rArr; printi &rArr; prints
</UL>
<BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;phy_printf
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATT_FindHandle (via Veneer)
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATT_WriteRsp (via Veneer)
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_WriteAttr
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_FindAuthorizeAttrCB
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessMsg
</UL>

<P><STRONG><a name="[85]"></a>gattServApp_SetNumPrepareWrites</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, gattservapp.o(i.gattServApp_SetNumPrepareWrites))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = gattServApp_SetNumPrepareWrites
</UL>
<BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memset (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_Init
</UL>

<P><STRONG><a name="[17]"></a>gattServApp_WriteAttrCB</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, gattservapp.o(i.gattServApp_WriteAttrCB))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = gattServApp_WriteAttrCB &rArr; GATTServApp_ProcessCCCWriteReq &rArr; GATTServApp_SendCCCUpdatedEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_ProcessCCCWriteReq
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gattservapp.o(.constdata)
</UL>
<P><STRONG><a name="[dd]"></a>gapCentralRole_ProcessGAPMsg</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, central.o(i.gapCentralRole_ProcessGAPMsg))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = gapCentralRole_ProcessGAPMsg &rArr; GAPBondMgr_ProcessGAPMsg &rArr; GAPBondMgr_SetParameter &rArr; gapBondMgrEraseAllBondings &rArr; gapBondMgrEraseBonding &rArr; osal_snv_write &rArr; snvwr &rArr; ProgramWord
</UL>
<BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPBondMgr_ProcessGAPMsg
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPBondMgr_LinkEst
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy (via Veneer)
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPCentralRole_CancelRssi
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapCentralRole_ProcessOSALMsg
</UL>

<P><STRONG><a name="[71]"></a>gapCentralRole_ProcessOSALMsg</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, central.o(i.gapCentralRole_ProcessOSALMsg))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = gapCentralRole_ProcessOSALMsg &rArr; gapCentralRole_ProcessGAPMsg &rArr; GAPBondMgr_ProcessGAPMsg &rArr; GAPBondMgr_SetParameter &rArr; gapBondMgrEraseAllBondings &rArr; gapBondMgrEraseBonding &rArr; osal_snv_write &rArr; snvwr &rArr; ProgramWord
</UL>
<BR>[Calls]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_CbTimerStart (via Veneer)
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapCentralRole_ProcessGAPMsg
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkDB_State (via Veneer)
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCI_ReadRssiCmd (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPCentralRole_ProcessEvent
</UL>

<P><STRONG><a name="[6b]"></a>gapCentralRole_RssiFind</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, central.o(i.gapCentralRole_RssiFind))
<BR><BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPCentralRole_CancelRssi
</UL>

<P><STRONG><a name="[c]"></a>gapCentralRole_timerCB</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, central.o(i.gapCentralRole_timerCB))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gapCentralRole_timerCB
</UL>
<BR>[Calls]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_msg_send (via Veneer)
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_msg_allocate (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> central.o(i.gapCentralRole_ProcessOSALMsg)
</UL>
<P><STRONG><a name="[2a]"></a>hard_fault</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, jump_table.o(i.hard_fault))
<BR>[Address Reference Count : 1]<UL><LI> jump_table.o(jump_table_mem_area)
</UL>
<P><STRONG><a name="[bb]"></a>centralTestVectorProcess</STRONG> (Thumb, 350 bytes, Stack size 56 bytes, simpleblecentral.o(i.centralTestVectorProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = centralTestVectorProcess &rArr; phy_printf &rArr; print &rArr; printi &rArr; prints
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_set_event (via Veneer)
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memset (via Veneer)
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;phy_printf
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getMcuPrecisionCount (via Veneer)
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCI_PPLUS_ConnEventDoneNoticeCmd (via Veneer)
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPCentralRole_TerminateLink
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SimpleBLECentral_ProcessEvent
</UL>

<P><STRONG><a name="[164]"></a>simpleBLEAddDeviceInfo</STRONG> (Thumb, 178 bytes, Stack size 32 bytes, simpleblecentral.o(i.simpleBLEAddDeviceInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = simpleBLEAddDeviceInfo &rArr; simpleBLEAnalysisADVDATA &rArr; phy_printf &rArr; print &rArr; printi &rArr; prints
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcmp (via Veneer)
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy (via Veneer)
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simpleBLEAnalysisADVDATA
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simpleBLECentralEventCB
</UL>

<P><STRONG><a name="[165]"></a>simpleBLEAnalysisADVDATA</STRONG> (Thumb, 362 bytes, Stack size 40 bytes, simpleblecentral.o(i.simpleBLEAnalysisADVDATA))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = simpleBLEAnalysisADVDATA &rArr; phy_printf &rArr; print &rArr; printi &rArr; prints
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy (via Veneer)
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;phy_printf
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simpleBLEAddDeviceInfo
</UL>

<P><STRONG><a name="[23]"></a>simpleBLECentralEventCB</STRONG> (Thumb, 672 bytes, Stack size 56 bytes, simpleblecentral.o(i.simpleBLECentralEventCB))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = simpleBLECentralEventCB &rArr; simpleBLEAddDeviceInfo &rArr; simpleBLEAnalysisADVDATA &rArr; phy_printf &rArr; print &rArr; printi &rArr; prints
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_set_event (via Veneer)
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memset (via Veneer)
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy (via Veneer)
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;phy_printf
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llInitFeatureSetDLE (via Veneer)
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llInitFeatureSet2MPHY (via Veneer)
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getMcuPrecisionCount (via Veneer)
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_PerStatsProcess
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCI_ReadRemoteVersionInfoCmd (via Veneer)
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCI_PPLUS_ConnEventDoneNoticeCmd (via Veneer)
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCI_LE_SetDefaultPhyMode (via Veneer)
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCI_LE_ReadRemoteUsedFeaturesCmd (via Veneer)
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATT_ExchangeMTU (via Veneer)
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATT_SetMTUSizeMax (via Veneer)
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simpleBLEAddDeviceInfo
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPCentralRole_EstablishLink
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_timerEx (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> simpleblecentral.o(.constdata)
</UL>
<P><STRONG><a name="[25]"></a>simpleBLECentralPairStateCB</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, simpleblecentral.o(i.simpleBLECentralPairStateCB))
<BR>[Address Reference Count : 1]<UL><LI> simpleblecentral.o(.constdata)
</UL>
<P><STRONG><a name="[24]"></a>simpleBLECentralPasscodeCB</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, simpleblecentral.o(i.simpleBLECentralPasscodeCB))
<BR>[Address Reference Count : 1]<UL><LI> simpleblecentral.o(.constdata)
</UL>
<P><STRONG><a name="[ae]"></a>simpleBLECentralProcessGATTMsg</STRONG> (Thumb, 256 bytes, Stack size 24 bytes, simpleblecentral.o(i.simpleBLECentralProcessGATTMsg))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = simpleBLECentralProcessGATTMsg &rArr; phy_printf &rArr; print &rArr; printi &rArr; prints
</UL>
<BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;phy_printf
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCI_PPLUS_ConnEventDoneNoticeCmd (via Veneer)
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATT_GetCurrentMTUSize (via Veneer)
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simpleBLEGATTDiscoveryEvent
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_timerEx (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SimpleBLECentral_ProcessEvent
</UL>

<P><STRONG><a name="[22]"></a>simpleBLECentralRssiCB</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, simpleblecentral.o(i.simpleBLECentralRssiCB))
<BR>[Address Reference Count : 1]<UL><LI> simpleblecentral.o(.constdata)
</UL>
<P><STRONG><a name="[b1]"></a>simpleBLECentral_CharacteristicTest</STRONG> (Thumb, 360 bytes, Stack size 40 bytes, simpleblecentral.o(i.simpleBLECentral_CharacteristicTest))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = simpleBLECentral_CharacteristicTest
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy (via Veneer)
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATT_WriteCharValue (via Veneer)
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATT_ReadCharValue (via Veneer)
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_mem_free (via Veneer)
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_mem_alloc (via Veneer)
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_timerEx (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SimpleBLECentral_ProcessEvent
</UL>

<P><STRONG><a name="[af]"></a>simpleBLECentral_LinkDevice</STRONG> (Thumb, 120 bytes, Stack size 24 bytes, simpleblecentral.o(i.simpleBLECentral_LinkDevice))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = simpleBLECentral_LinkDevice &rArr; phy_printf &rArr; print &rArr; printi &rArr; prints
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcmp (via Veneer)
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;phy_printf
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPCentralRole_EstablishLink
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_timerEx (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SimpleBLECentral_ProcessEvent
</UL>

<P><STRONG><a name="[b6]"></a>simpleBLECentral_ReadWriteNotifyTest</STRONG> (Thumb, 230 bytes, Stack size 24 bytes, simpleblecentral.o(i.simpleBLECentral_ReadWriteNotifyTest))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = simpleBLECentral_ReadWriteNotifyTest
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy (via Veneer)
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATT_WriteNoRsp (via Veneer)
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATT_ReadCharValue (via Veneer)
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_mem_free (via Veneer)
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_mem_alloc (via Veneer)
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_timerEx (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SimpleBLECentral_ProcessEvent
</UL>

<P><STRONG><a name="[16d]"></a>simpleBLEGATTDiscoveryEvent</STRONG> (Thumb, 444 bytes, Stack size 32 bytes, simpleblecentral.o(i.simpleBLEGATTDiscoveryEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = simpleBLEGATTDiscoveryEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy (via Veneer)
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATT_DiscAllChars (via Veneer)
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_timerEx (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simpleBLECentralProcessGATTMsg
</UL>

<P><STRONG><a name="[f8]"></a>NVIC_SetPriority</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, gpio.o(i.NVIC_SetPriority))
<BR><BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_init
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_wakeup_handler
</UL>

<P><STRONG><a name="[fc]"></a>gpio_interrupt_enable</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, gpio.o(i.gpio_interrupt_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gpio_interrupt_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpioin_enable
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpioin_event
</UL>

<P><STRONG><a name="[e]"></a>gpio_sleep_handler</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, gpio.o(i.gpio_sleep_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = gpio_sleep_handler &rArr; hal_gpio_wakeup_set
</UL>
<BR>[Calls]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_read
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_wakeup_set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gpio.o(i.hal_gpio_init)
</UL>
<P><STRONG><a name="[d]"></a>gpio_wakeup_handler</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, gpio.o(i.gpio_wakeup_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = gpio_wakeup_handler &rArr; hal_gpioin_enable &rArr; hal_gpio_pin_init
</UL>
<BR>[Calls]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_read
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpioin_enable
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpioin_event_pin
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gpio.o(i.hal_gpio_init)
</UL>
<P><STRONG><a name="[fb]"></a>gpioin_event</STRONG> (Thumb, 104 bytes, Stack size 32 bytes, gpio.o(i.gpioin_event))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = gpioin_event &rArr; gpio_interrupt_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpioin_event_pin
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_interrupt_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_GPIO_IRQHandler
</UL>

<P><STRONG><a name="[fa]"></a>gpioin_event_pin</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, gpio.o(i.gpioin_event_pin))
<BR><BR>[Called By]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpioin_event
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_wakeup_handler
</UL>

<P><STRONG><a name="[ff]"></a>irq_rx_handler</STRONG> (Thumb, 68 bytes, Stack size 56 bytes, uart.o(i.irq_rx_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = irq_rx_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_UART0_IRQHandler
</UL>

<P><STRONG><a name="[100]"></a>irq_tx_empty_handler</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, uart.o(i.irq_tx_empty_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = irq_tx_empty_handler &rArr; hal_pwrmgr_unlock
</UL>
<BR>[Calls]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwrmgr_unlock
</UL>
<BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_UART0_IRQHandler
</UL>

<P><STRONG><a name="[11c]"></a>txmit_buf_polling</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, uart.o(i.txmit_buf_polling))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = txmit_buf_polling
</UL>
<BR>[Called By]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_send_buff
</UL>

<P><STRONG><a name="[11b]"></a>txmit_buf_use_tx_buf</STRONG> (Thumb, 118 bytes, Stack size 16 bytes, uart.o(i.txmit_buf_use_tx_buf))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = txmit_buf_use_tx_buf &rArr; hal_pwrmgr_lock
</UL>
<BR>[Calls]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwrmgr_lock
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_send_buff
</UL>

<P><STRONG><a name="[10]"></a>uart_hw_config</STRONG> (Thumb, 172 bytes, Stack size 24 bytes, uart.o(i.uart_hw_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = uart_hw_config &rArr; hal_gpio_fmux_set
</UL>
<BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod (via Veneer)
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_fmux_set
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_fmux
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clk_reset
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clk_pclk
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clk_gate_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> uart.o(i.hal_uart_init)
</UL>
<P><STRONG><a name="[134]"></a>print</STRONG> (Thumb, 250 bytes, Stack size 48 bytes, my_printf.o(i.print))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = print &rArr; printi &rArr; prints
</UL>
<BR>[Calls]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prints
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printi
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printchar
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;phy_printf
</UL>

<P><STRONG><a name="[139]"></a>printchar</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, my_printf.o(i.printchar))
<BR><BR>[Called By]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prints
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printi
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print
</UL>

<P><STRONG><a name="[138]"></a>printi</STRONG> (Thumb, 146 bytes, Stack size 48 bytes, my_printf.o(i.printi))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = printi &rArr; prints
</UL>
<BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod (via Veneer)
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prints
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printchar
</UL>
<BR>[Called By]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print
</UL>

<P><STRONG><a name="[137]"></a>prints</STRONG> (Thumb, 112 bytes, Stack size 40 bytes, my_printf.o(i.prints))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = prints
</UL>
<BR>[Calls]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printchar
</UL>
<BR>[Called By]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printi
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print
</UL>

<P><STRONG><a name="[fe]"></a>spi_int_handle</STRONG> (Thumb, 226 bytes, Stack size 48 bytes, spi.o(i.spi_int_handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = spi_int_handle &rArr; hal_pwrmgr_unlock
</UL>
<BR>[Calls]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_fmux
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwrmgr_unlock
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_SPI1_IRQHandler
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_SPI0_IRQHandler
</UL>

<P><STRONG><a name="[fd]"></a>spis_int_handle</STRONG> (Thumb, 92 bytes, Stack size 48 bytes, spi.o(i.spis_int_handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = spis_int_handle
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_SPI1_IRQHandler
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_SPI0_IRQHandler
</UL>

<P><STRONG><a name="[132]"></a>print_hex</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, osal_snv.o(i.print_hex))
<BR><BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_snv_write
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_snv_read
</UL>

<P><STRONG><a name="[131]"></a>snv_calc_addr</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, osal_snv.o(i.snv_calc_addr))
<BR><BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_snv_write
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_snv_read
</UL>

<P><STRONG><a name="[133]"></a>snvwr</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, osal_snv.o(i.snvwr))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = snvwr &rArr; ProgramWord
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProgramWord
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_snv_write
</UL>

<P><STRONG><a name="[148]"></a>rf_phy_dtm_init</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, rf_phy_driver.o(i.rf_phy_dtm_init))
<BR><BR>[Called By]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_dtm_ext_tx_singleTone
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_dtm_ext_tx_modulation
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_dtm_ext_tx_mod_burst
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_dtm_ext_rx_demod_burst
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_direct_test
</UL>

<P><STRONG><a name="[155]"></a>rf_phy_dtm_stop</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, rf_phy_driver.o(i.rf_phy_dtm_stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = rf_phy_dtm_stop &rArr; subWriteReg
</UL>
<BR>[Calls]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;subWriteReg
</UL>
<BR>[Called By]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_dtm_ext_tx_singleTone
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_dtm_ext_tx_modulation
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_dtm_ext_tx_mod_burst
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_dtm_ext_rx_demod_burst
</UL>

<P><STRONG><a name="[13e]"></a>chip_id_one_bit_hot_convter</STRONG> (Thumb, 108 bytes, Stack size 20 bytes, flash_ext.o(i.chip_id_one_bit_hot_convter))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = chip_id_one_bit_hot_convter
</UL>
<BR>[Called By]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_chip_mAddr
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_chip_id
</UL>

<P><STRONG><a name="[c3]"></a>_printf_core</STRONG> (Thumb, 1020 bytes, Stack size 104 bytes, printf8.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0printf$8
</UL>

<P><STRONG><a name="[c5]"></a>_printf_post_padding</STRONG> (Thumb, 32 bytes, Stack size 24 bytes, printf8.o(i._printf_post_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[c4]"></a>_printf_pre_padding</STRONG> (Thumb, 44 bytes, Stack size 40 bytes, printf8.o(i._printf_pre_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
